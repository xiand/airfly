; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c -S -o.\objects\ff.s --depend=.\objects\ff.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\USER\bsp_nucleof411Re -I..\..\USER\bsp_nucleof411Re\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\USER\IAP -I..\..\USER\FatFS\src -I..\..\Freertos\include -I..\..\Freertos\portable\RVDS\ARM_CM4F -I..\..\USER -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0 -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F411xE -DUSE_STDPERIPH_DRIVER -DSTM32F411xE --signed_chars --omf_browse=.\objects\ff.crf ..\..\USER\fatfs\src\ff.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.check_fs||, CODE, READONLY, ALIGN=2

check_fs PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r0,#0
        STRB     r0,[r4,#4]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x2c]
        MOV      r1,r5
        MOV      r0,r4
        BL       move_window
        CBZ      r0,|L0.28|
        MOVS     r0,#3
|L0.26|
        POP      {r4-r6,pc}
|L0.28|
        LDRB     r1,[r4,#0x22e]
        LDRB     r0,[r4,#0x22f]
        ORR      r0,r1,r0,LSL #8
        MOV      r1,#0xaa55
        CMP      r0,r1
        BEQ      |L0.52|
        MOVS     r0,#2
        B        |L0.26|
|L0.52|
        LDRB     r0,[r4,#0x69]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x68]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x67]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x66]
        ORRS     r0,r0,r1
        BIC      r0,r0,#0xff000000
        LDR      r1,|L0.140|
        CMP      r0,r1
        BNE      |L0.94|
        MOVS     r0,#0
        B        |L0.26|
|L0.94|
        LDRB     r0,[r4,#0x85]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x84]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x83]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x82]
        ORRS     r0,r0,r1
        BIC      r0,r0,#0xff000000
        LDR      r1,|L0.140|
        CMP      r0,r1
        BNE      |L0.136|
        MOVS     r0,#0
        B        |L0.26|
|L0.136|
        MOVS     r0,#1
        B        |L0.26|
        ENDP

|L0.140|
        DCD      0x00544146

        AREA ||i.chk_chr||, CODE, READONLY, ALIGN=1

chk_chr PROC
        MOV      r2,r0
        B        |L1.6|
|L1.4|
        ADDS     r2,r2,#1
|L1.6|
        LDRB     r0,[r2,#0]
        CBZ      r0,|L1.18|
        LDRSB    r0,[r2,#0]
        CMP      r0,r1
        BNE      |L1.4|
|L1.18|
        LDRSB    r0,[r2,#0]
        BX       lr
        ENDP


        AREA ||i.clust2sect||, CODE, READONLY, ALIGN=1

clust2sect PROC
        MOV      r2,r0
        SUBS     r1,r1,#2
        LDR      r0,[r2,#0x14]
        SUBS     r0,r0,#2
        CMP      r0,r1
        BHI      |L2.16|
        MOVS     r0,#0
|L2.14|
        BX       lr
|L2.16|
        LDRB     r3,[r2,#2]
        LDR      r0,[r2,#0x28]
        MLA      r0,r1,r3,r0
        B        |L2.14|
        ENDP


        AREA ||i.create_chain||, CODE, READONLY, ALIGN=1

create_chain PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        MOV      r9,r1
        CMP      r9,#0
        BNE      |L3.28|
        LDR      r7,[r4,#0xc]
        CBZ      r7,|L3.24|
        LDR      r0,[r4,#0x14]
        CMP      r0,r7
        BHI      |L3.68|
|L3.24|
        MOVS     r7,#1
        B        |L3.68|
|L3.28|
        MOV      r1,r9
        MOV      r0,r4
        BL       get_fat
        MOV      r6,r0
        CMP      r6,#2
        BCS      |L3.48|
        MOVS     r0,#1
|L3.44|
        POP      {r4-r10,pc}
|L3.48|
        ADDS     r0,r6,#1
        CBNZ     r0,|L3.56|
        MOV      r0,r6
        B        |L3.44|
|L3.56|
        LDR      r0,[r4,#0x14]
        CMP      r0,r6
        BLS      |L3.66|
        MOV      r0,r6
        B        |L3.44|
|L3.66|
        MOV      r7,r9
|L3.68|
        MOV      r5,r7
        NOP      
|L3.72|
        ADDS     r5,r5,#1
        LDR      r0,[r4,#0x14]
        CMP      r0,r5
        BHI      |L3.90|
        MOVS     r5,#2
        CMP      r5,r7
        BLS      |L3.90|
        MOVS     r0,#0
        B        |L3.44|
|L3.90|
        MOV      r1,r5
        MOV      r0,r4
        BL       get_fat
        MOV      r6,r0
        CBNZ     r6,|L3.104|
        B        |L3.124|
|L3.104|
        ADDS     r0,r6,#1
        CBZ      r0,|L3.112|
        CMP      r6,#1
        BNE      |L3.116|
|L3.112|
        MOV      r0,r6
        B        |L3.44|
|L3.116|
        CMP      r5,r7
        BNE      |L3.72|
        MOVS     r0,#0
        B        |L3.44|
|L3.124|
        NOP      
        MVN      r2,#0xf0000000
        MOV      r1,r5
        MOV      r0,r4
        BL       put_fat
        MOV      r8,r0
        CMP      r8,#0
        BNE      |L3.164|
        CMP      r9,#0
        BEQ      |L3.164|
        MOV      r2,r5
        MOV      r1,r9
        MOV      r0,r4
        BL       put_fat
        MOV      r8,r0
|L3.164|
        CMP      r8,#0
        BNE      |L3.194|
        STR      r5,[r4,#0xc]
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        CBZ      r0,|L3.210|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x10]
        LDRB     r0,[r4,#5]
        ORR      r0,r0,#1
        STRB     r0,[r4,#5]
        B        |L3.210|
|L3.194|
        CMP      r8,#1
        BNE      |L3.206|
        MOV      r0,#0xffffffff
        B        |L3.208|
|L3.206|
        MOVS     r0,#1
|L3.208|
        MOV      r5,r0
|L3.210|
        MOV      r0,r5
        B        |L3.44|
        ENDP


        AREA ||i.create_name||, CODE, READONLY, ALIGN=2

create_name PROC
        PUSH     {r0,r1,r4-r12,lr}
        LDR      r0,[sp,#4]
        LDR      r9,[r0,#0]
        B        |L4.16|
|L4.12|
        ADD      r9,r9,#1
|L4.16|
        LDRB     r0,[r9,#0]
        CMP      r0,#0x2f
        BEQ      |L4.12|
        LDRB     r0,[r9,#0]
        CMP      r0,#0x5c
        BEQ      |L4.12|
        LDR      r0,[sp,#0]
        LDR      r6,[r0,#0x18]
        MOVS     r2,#0xb
        MOVS     r1,#0x20
        MOV      r0,r6
        BL       mem_set
        MOVS     r5,#0
        MOV      r7,r5
        MOV      r11,r5
        MOV      r10,#8
        NOP      
|L4.58|
        MOV      r0,r11
        ADD      r11,r11,#1
        LDRB     r4,[r9,r0]
        CMP      r4,#0x20
        BLE      |L4.80|
        CMP      r4,#0x2f
        BEQ      |L4.80|
        CMP      r4,#0x5c
        BNE      |L4.82|
|L4.80|
        B        |L4.258|
|L4.82|
        CMP      r4,#0x2e
        BEQ      |L4.90|
        CMP      r7,r10
        BCC      |L4.118|
|L4.90|
        CMP      r10,#8
        BNE      |L4.100|
        CMP      r4,#0x2e
        BEQ      |L4.106|
|L4.100|
        MOVS     r0,#6
|L4.102|
        POP      {r2-r12,pc}
|L4.106|
        MOVS     r7,#8
        MOV      r10,#0xb
        LSLS     r0,r5,#26
        LSRS     r5,r0,#24
        B        |L4.58|
|L4.118|
        CMP      r4,#0x80
        BLT      |L4.126|
        ORR      r5,r5,#3
|L4.126|
        CMP      r4,#0x81
        BLT      |L4.134|
        CMP      r4,#0x9f
        BLE      |L4.142|
|L4.134|
        CMP      r4,#0xe0
        BLT      |L4.204|
        CMP      r4,#0xfc
        BGT      |L4.204|
|L4.142|
        MOV      r0,r11
        ADD      r11,r11,#1
        LDRB     r8,[r9,r0]
        CMP      r8,#0x40
        BLT      |L4.164|
        CMP      r8,#0x7e
        BLE      |L4.176|
|L4.164|
        CMP      r8,#0x80
        BLT      |L4.184|
        CMP      r8,#0xfc
        BGT      |L4.184|
|L4.176|
        SUB      r0,r10,#1
        CMP      r0,r7
        BHI      |L4.188|
|L4.184|
        MOVS     r0,#6
        B        |L4.102|
|L4.188|
        MOV      r0,r7
        ADDS     r7,r7,#1
        STRB     r4,[r6,r0]
        MOV      r0,r7
        ADDS     r7,r7,#1
        STRB     r8,[r6,r0]
        B        |L4.256|
|L4.204|
        MOV      r1,r4
        ADR      r0,|L4.336|
        BL       chk_chr
        CBZ      r0,|L4.218|
        MOVS     r0,#6
        B        |L4.102|
|L4.218|
        CMP      r4,#0x41
        BLT      |L4.232|
        CMP      r4,#0x5a
        BGT      |L4.232|
        ORR      r5,r5,#2
        B        |L4.250|
|L4.232|
        CMP      r4,#0x61
        BLT      |L4.250|
        CMP      r4,#0x7a
        BGT      |L4.250|
        ORR      r5,r5,#1
        SUB      r0,r4,#0x20
        UXTB     r4,r0
|L4.250|
        MOV      r0,r7
        ADDS     r7,r7,#1
        STRB     r4,[r6,r0]
|L4.256|
        B        |L4.58|
|L4.258|
        NOP      
        ADD      r1,r9,r11
        LDR      r0,[sp,#4]
        STR      r1,[r0,#0]
        CMP      r4,#0x20
        BGT      |L4.276|
        MOVS     r0,#4
        B        |L4.278|
|L4.276|
        MOVS     r0,#0
|L4.278|
        MOV      r4,r0
        CBNZ     r7,|L4.286|
        MOVS     r0,#6
        B        |L4.102|
|L4.286|
        LDRB     r0,[r6,#0]
        CMP      r0,#0xe5
        BNE      |L4.296|
        MOVS     r0,#5
        STRB     r0,[r6,#0]
|L4.296|
        CMP      r10,#8
        BNE      |L4.306|
        LSLS     r0,r5,#26
        LSRS     r5,r0,#24
|L4.306|
        AND      r0,r5,#3
        CMP      r0,#1
        BNE      |L4.318|
        ORR      r4,r4,#0x10
|L4.318|
        AND      r0,r5,#0xc
        CMP      r0,#4
        BNE      |L4.330|
        ORR      r4,r4,#8
|L4.330|
        STRB     r4,[r6,#0xb]
        MOVS     r0,#0
        B        |L4.102|
        ENDP

|L4.336|
        DCB      """*+,:;<=>?[]|",127,0
        DCB      0

        AREA ||i.dir_alloc||, CODE, READONLY, ALIGN=1

dir_alloc PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOVS     r1,#0
        MOV      r0,r4
        BL       dir_sdi
        MOV      r5,r0
        CBNZ     r5,|L5.80|
        MOVS     r7,#0
        NOP      
|L5.24|
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#0]
        BL       move_window
        MOV      r5,r0
        CBZ      r5,|L5.38|
        B        |L5.78|
|L5.38|
        LDR      r0,[r4,#0x14]
        LDRB     r0,[r0,#0]
        CMP      r0,#0xe5
        BEQ      |L5.52|
        LDR      r0,[r4,#0x14]
        LDRB     r0,[r0,#0]
        CBNZ     r0,|L5.62|
|L5.52|
        ADDS     r0,r7,#1
        MOV      r7,r0
        CMP      r0,r6
        BNE      |L5.64|
        B        |L5.78|
|L5.62|
        MOVS     r7,#0
|L5.64|
        MOVS     r1,#1
        MOV      r0,r4
        BL       dir_next
        MOV      r5,r0
        CMP      r5,#0
        BEQ      |L5.24|
|L5.78|
        NOP      
|L5.80|
        CMP      r5,#4
        BNE      |L5.86|
        MOVS     r5,#7
|L5.86|
        MOV      r0,r5
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.dir_find||, CODE, READONLY, ALIGN=1

dir_find PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOVS     r1,#0
        MOV      r0,r4
        BL       dir_sdi
        MOV      r5,r0
        CBZ      r5,|L6.24|
        MOV      r0,r5
|L6.20|
        POP      {r4-r8,pc}
|L6.24|
        NOP      
|L6.26|
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#0]
        BL       move_window
        MOV      r5,r0
        CBZ      r5,|L6.40|
        B        |L6.86|
|L6.40|
        LDR      r6,[r4,#0x14]
        LDRB     r7,[r6,#0]
        CBNZ     r7,|L6.50|
        MOVS     r5,#4
        B        |L6.86|
|L6.50|
        LDRB     r0,[r6,#0xb]
        AND      r0,r0,#8
        CBNZ     r0,|L6.72|
        MOVS     r2,#0xb
        MOV      r0,r6
        LDR      r1,[r4,#0x18]
        BL       mem_cmp
        CBNZ     r0,|L6.72|
        B        |L6.86|
|L6.72|
        MOVS     r1,#0
        MOV      r0,r4
        BL       dir_next
        MOV      r5,r0
        CMP      r5,#0
        BEQ      |L6.26|
|L6.86|
        NOP      
        MOV      r0,r5
        B        |L6.20|
        ENDP


        AREA ||i.dir_next||, CODE, READONLY, ALIGN=1

dir_next PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r8,r1
        LDRH     r0,[r4,#6]
        ADDS     r6,r0,#1
        UXTH     r0,r6
        CBZ      r0,|L7.20|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L7.26|
|L7.20|
        MOVS     r0,#4
|L7.22|
        POP      {r4-r8,pc}
|L7.26|
        AND      r0,r6,#0xf
        CMP      r0,#0
        BNE      |L7.250|
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#0xc]
        CBNZ     r0,|L7.56|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#8]
        CMP      r0,r6
        BHI      |L7.250|
        MOVS     r0,#4
        B        |L7.22|
|L7.56|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        SUBS     r0,r0,#1
        AND      r0,r0,r6,LSR #4
        CMP      r0,#0
        BNE      |L7.250|
        LDR      r1,[r4,#0xc]
        LDR      r0,[r4,#0]
        BL       get_fat
        MOV      r5,r0
        CMP      r5,#1
        BHI      |L7.88|
        MOVS     r0,#2
        B        |L7.22|
|L7.88|
        ADDS     r0,r5,#1
        CBNZ     r0,|L7.96|
        MOVS     r0,#1
        B        |L7.22|
|L7.96|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        CMP      r0,r5
        BHI      |L7.238|
        CMP      r8,#0
        BNE      |L7.114|
        MOVS     r0,#4
        B        |L7.22|
|L7.114|
        LDR      r1,[r4,#0xc]
        LDR      r0,[r4,#0]
        BL       create_chain
        MOV      r5,r0
        CBNZ     r5,|L7.130|
        MOVS     r0,#7
        B        |L7.22|
|L7.130|
        CMP      r5,#1
        BNE      |L7.138|
        MOVS     r0,#2
        B        |L7.22|
|L7.138|
        ADDS     r0,r5,#1
        CBNZ     r0,|L7.146|
        MOVS     r0,#1
        B        |L7.22|
|L7.146|
        LDR      r0,[r4,#0]
        BL       sync_window
        CBZ      r0,|L7.158|
        MOVS     r0,#1
        B        |L7.22|
|L7.158|
        LDR      r1,[r4,#0]
        ADD      r0,r1,#0x30
        MOV      r2,#0x200
        MOVS     r1,#0
        BL       mem_set
        MOV      r1,r5
        LDR      r0,[r4,#0]
        BL       clust2sect
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        MOVS     r7,#0
        B        |L7.220|
|L7.190|
        MOVS     r0,#1
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#4]
        LDR      r0,[r4,#0]
        BL       sync_window
        CBZ      r0,|L7.208|
        MOVS     r0,#1
        B        |L7.22|
|L7.208|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x2c]
        ADDS     r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        ADDS     r7,r7,#1
|L7.220|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        CMP      r0,r7
        BHI      |L7.190|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x2c]
        SUBS     r0,r0,r7
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
|L7.238|
        STR      r5,[r4,#0xc]
        MOV      r1,r5
        LDR      r0,[r4,#0]
        BL       clust2sect
        STR      r0,[r4,#0x10]
|L7.250|
        STRH     r6,[r4,#6]
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#0x30
        AND      r1,r6,#0xf
        ADD      r0,r0,r1,LSL #5
        STR      r0,[r4,#0x14]
        MOVS     r0,#0
        B        |L7.22|
        ENDP


        AREA ||i.dir_read||, CODE, READONLY, ALIGN=1

dir_read PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        MOV      r9,r1
        MOVS     r5,#4
        B        |L8.94|
|L8.12|
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#0]
        BL       move_window
        MOV      r5,r0
        CBZ      r5,|L8.26|
        B        |L8.100|
|L8.26|
        LDR      r8,[r4,#0x14]
        LDRB     r6,[r8,#0]
        CBNZ     r6,|L8.40|
        MOVS     r5,#4
        B        |L8.100|
|L8.40|
        LDRB     r0,[r8,#0xb]
        AND      r7,r0,#0x3f
        CMP      r6,#0xe5
        BEQ      |L8.80|
        CMP      r6,#0x2e
        BEQ      |L8.80|
        CMP      r7,#0xf
        BEQ      |L8.80|
        BIC      r0,r7,#0x20
        CMP      r0,#8
        BNE      |L8.72|
        MOVS     r0,#1
        B        |L8.74|
|L8.72|
        MOVS     r0,#0
|L8.74|
        CMP      r0,r9
        BNE      |L8.80|
        B        |L8.100|
|L8.80|
        MOVS     r1,#0
        MOV      r0,r4
        BL       dir_next
        MOV      r5,r0
        CBZ      r5,|L8.94|
        B        |L8.100|
|L8.94|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BNE      |L8.12|
|L8.100|
        NOP      
        CBZ      r5,|L8.108|
        MOVS     r0,#0
        STR      r0,[r4,#0x10]
|L8.108|
        MOV      r0,r5
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.dir_register||, CODE, READONLY, ALIGN=1

dir_register PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r1,#1
        MOV      r0,r4
        BL       dir_alloc
        MOV      r5,r0
        CBNZ     r5,|L9.54|
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#0]
        BL       move_window
        MOV      r5,r0
        CBNZ     r5,|L9.54|
        MOVS     r2,#0x20
        MOVS     r1,#0
        LDR      r0,[r4,#0x14]
        BL       mem_set
        MOVS     r2,#0xb
        LDRD     r0,r1,[r4,#0x14]
        BL       mem_cpy
        MOVS     r0,#1
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#4]
|L9.54|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.dir_remove||, CODE, READONLY, ALIGN=1

dir_remove PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDRH     r1,[r4,#6]
        MOV      r0,r4
        BL       dir_sdi
        MOV      r5,r0
        CBNZ     r5,|L10.50|
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#0]
        BL       move_window
        MOV      r5,r0
        CBNZ     r5,|L10.50|
        MOVS     r2,#0x20
        MOVS     r1,#0
        LDR      r0,[r4,#0x14]
        BL       mem_set
        MOVS     r0,#0xe5
        LDR      r1,[r4,#0x14]
        STRB     r0,[r1,#0]
        MOVS     r0,#1
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#4]
|L10.50|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.dir_sdi||, CODE, READONLY, ALIGN=1

dir_sdi PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        STRH     r6,[r4,#6]
        LDR      r5,[r4,#8]
        CMP      r5,#1
        BEQ      |L11.24|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        CMP      r0,r5
        BHI      |L11.30|
|L11.24|
        MOVS     r0,#2
|L11.26|
        POP      {r4-r8,pc}
|L11.30|
        CBNZ     r5,|L11.44|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#0]
        CMP      r0,#3
        BNE      |L11.44|
        LDR      r0,[r4,#0]
        LDR      r5,[r0,#0x24]
|L11.44|
        CBNZ     r5,|L11.64|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#8]
        CMP      r0,r6
        BHI      |L11.58|
        MOVS     r0,#2
        B        |L11.26|
|L11.58|
        LDR      r0,[r4,#0]
        LDR      r7,[r0,#0x24]
        B        |L11.126|
|L11.64|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        LSL      r8,r0,#4
        B        |L11.112|
|L11.74|
        MOV      r1,r5
        LDR      r0,[r4,#0]
        BL       get_fat
        MOV      r5,r0
        ADDS     r0,r5,#1
        CBNZ     r0,|L11.92|
        MOVS     r0,#1
        B        |L11.26|
|L11.92|
        CMP      r5,#2
        BCC      |L11.104|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        CMP      r0,r5
        BHI      |L11.108|
|L11.104|
        MOVS     r0,#2
        B        |L11.26|
|L11.108|
        SUB      r6,r6,r8
|L11.112|
        CMP      r6,r8
        BCS      |L11.74|
        MOV      r1,r5
        LDR      r0,[r4,#0]
        BL       clust2sect
        MOV      r7,r0
|L11.126|
        STR      r5,[r4,#0xc]
        CBNZ     r7,|L11.134|
        MOVS     r0,#2
        B        |L11.26|
|L11.134|
        ADD      r0,r7,r6,LSR #4
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#0x30
        AND      r1,r6,#0xf
        ADD      r0,r0,r1,LSL #5
        STR      r0,[r4,#0x14]
        MOVS     r0,#0
        B        |L11.26|
        ENDP


        AREA ||i.f_chmod||, CODE, READONLY, ALIGN=1

f_chmod PROC
        PUSH     {r0-r2,r4-r7,lr}
        SUB      sp,sp,#0x28
        MOV      r7,r1
        MOV      r4,r2
        MOVS     r2,#1
        ADD      r1,sp,#0x28
        ADD      r0,sp,#0xc
        BL       find_volume
        MOV      r6,r0
        CBNZ     r6,|L12.78|
        STR      sp,[sp,#0x24]
        ADD      r0,sp,#0xc
        LDR      r1,[sp,#0x28]
        BL       follow_path
        MOV      r6,r0
        NOP      
        CBNZ     r6,|L12.78|
        LDR      r5,[sp,#0x20]
        CBNZ     r5,|L12.48|
        MOVS     r6,#6
        B        |L12.78|
|L12.48|
        AND      r4,r4,#0x27
        AND      r0,r7,r4
        LDRB     r1,[r5,#0xb]
        BICS     r1,r1,r4
        ORRS     r0,r0,r1
        STRB     r0,[r5,#0xb]
        MOVS     r0,#1
        LDR      r1,[sp,#0xc]
        STRB     r0,[r1,#4]
        LDR      r0,[sp,#0xc]
        BL       sync_fs
        MOV      r6,r0
|L12.78|
        MOV      r0,r6
        ADD      sp,sp,#0x34
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.f_close||, CODE, READONLY, ALIGN=1

f_close PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r0,r5
        BL       f_sync
        MOV      r4,r0
        CBNZ     r4,|L13.28|
        MOV      r0,r5
        BL       validate
        MOV      r4,r0
        CBNZ     r4,|L13.28|
        MOVS     r0,#0
        STR      r0,[r5,#0]
|L13.28|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.f_closedir||, CODE, READONLY, ALIGN=1

f_closedir PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       validate
        MOV      r5,r0
        CBNZ     r5,|L14.18|
        MOVS     r0,#0
        STR      r0,[r4,#0]
|L14.18|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.f_getfree||, CODE, READONLY, ALIGN=1

f_getfree PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#8
        MOV      r10,r1
        MOVS     r2,#0
        ADD      r1,sp,#8
        LDR      r0,[sp,#0x10]
        BL       find_volume
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0x10]
        LDR      r4,[r0,#0]
        LDR      r0,[sp,#4]
        CMP      r0,#0
        BNE      |L15.250|
        LDRD     r1,r0,[r4,#0x10]
        SUBS     r0,r0,#2
        CMP      r1,r0
        BHI      |L15.48|
        LDR      r0,[r4,#0x10]
        STR      r0,[r10,#0]
        B        |L15.250|
|L15.48|
        LDRB     r11,[r4,#0]
        MOVS     r6,#0
        CMP      r11,#1
        BNE      |L15.118|
        MOVS     r7,#2
        NOP      
|L15.64|
        MOV      r1,r7
        MOV      r0,r4
        BL       get_fat
        MOV      r8,r0
        ADD      r0,r8,#1
        CBNZ     r0,|L15.86|
        MOVS     r0,#1
        STR      r0,[sp,#4]
        B        |L15.116|
|L15.86|
        CMP      r8,#1
        BNE      |L15.98|
        MOVS     r0,#2
        STR      r0,[sp,#4]
        B        |L15.116|
|L15.98|
        CMP      r8,#0
        BNE      |L15.106|
        ADDS     r6,r6,#1
|L15.106|
        ADDS     r0,r7,#1
        MOV      r7,r0
        LDR      r1,[r4,#0x14]
        CMP      r0,r1
        BCC      |L15.64|
|L15.116|
        B        |L15.236|
|L15.118|
        LDR      r7,[r4,#0x14]
        LDR      r0,[r4,#0x20]
        STR      r0,[sp,#0]
        MOV      r9,#0
        MOVS     r5,#0
        NOP      
|L15.132|
        CMP      r9,#0
        BNE      |L15.168|
        LDR      r0,[sp,#0]
        ADDS     r2,r0,#1
        MOV      r1,r0
        MOV      r0,r4
        STR      r2,[sp,#0]
        BL       move_window
        STR      r0,[sp,#4]
        LDR      r0,[sp,#4]
        CBZ      r0,|L15.160|
        B        |L15.234|
|L15.160|
        ADD      r5,r4,#0x30
        MOV      r9,#0x200
|L15.168|
        CMP      r11,#2
        BNE      |L15.194|
        LDRB     r0,[r5,#0]
        LDRB     r1,[r5,#1]
        ORR      r0,r0,r1,LSL #8
        CBNZ     r0,|L15.186|
        ADDS     r6,r6,#1
|L15.186|
        ADDS     r5,r5,#2
        SUB      r9,r9,#2
        B        |L15.228|
|L15.194|
        LDRB     r0,[r5,#3]
        LSLS     r0,r0,#24
        LDRB     r1,[r5,#2]
        ORR      r0,r0,r1,LSL #16
        LDRB     r1,[r5,#1]
        ORR      r0,r0,r1,LSL #8
        LDRB     r1,[r5,#0]
        ORRS     r0,r0,r1
        BIC      r0,r0,#0xf0000000
        CBNZ     r0,|L15.222|
        ADDS     r6,r6,#1
|L15.222|
        ADDS     r5,r5,#4
        SUB      r9,r9,#4
|L15.228|
        SUBS     r0,r7,#1
        SUBS     r7,r0,#0
        BNE      |L15.132|
|L15.234|
        NOP      
|L15.236|
        STR      r6,[r4,#0x10]
        LDRB     r0,[r4,#5]
        ORR      r0,r0,#1
        STRB     r0,[r4,#5]
        STR      r6,[r10,#0]
|L15.250|
        LDR      r0,[sp,#4]
        ADD      sp,sp,#0x14
        POP      {r4-r11,pc}
        ENDP


        AREA ||i.f_lseek||, CODE, READONLY, ALIGN=1

f_lseek PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r0,r4
        BL       validate
        MOV      r10,r0
        CMP      r10,#0
        BEQ      |L16.28|
        MOV      r0,r10
|L16.24|
        POP      {r4-r10,pc}
|L16.28|
        LDRB     r0,[r4,#7]
        CBZ      r0,|L16.36|
        LDRB     r0,[r4,#7]
        B        |L16.24|
|L16.36|
        LDR      r0,[r4,#0xc]
        CMP      r0,r6
        BCS      |L16.52|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#2
        CBNZ     r0,|L16.52|
        LDR      r6,[r4,#0xc]
|L16.52|
        LDR      r9,[r4,#8]
        MOV      r8,#0
        STR      r8,[r4,#8]
        CMP      r6,#0
        BEQ      |L16.276|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        LSLS     r7,r0,#9
        CMP      r9,#0
        BEQ      |L16.116|
        SUBS     r0,r6,#1
        UDIV     r1,r0,r7
        SUB      r0,r9,#1
        UDIV     r0,r0,r7
        CMP      r1,r0
        BCC      |L16.116|
        SUB      r0,r9,#1
        SUBS     r1,r7,#1
        BICS     r0,r0,r1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        SUBS     r6,r6,r0
        LDR      r5,[r4,#0x14]
        B        |L16.154|
|L16.116|
        LDR      r5,[r4,#0x10]
        CBNZ     r5,|L16.152|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       create_chain
        MOV      r5,r0
        CMP      r5,#1
        BNE      |L16.140|
        MOVS     r0,#2
        STRB     r0,[r4,#7]
        B        |L16.24|
|L16.140|
        ADDS     r0,r5,#1
        CBNZ     r0,|L16.150|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L16.24|
|L16.150|
        STR      r5,[r4,#0x10]
|L16.152|
        STR      r5,[r4,#0x14]
|L16.154|
        CMP      r5,#0
        BEQ      |L16.276|
        B        |L16.232|
|L16.160|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#2
        CBZ      r0,|L16.184|
        MOV      r1,r5
        LDR      r0,[r4,#0]
        BL       create_chain
        MOV      r5,r0
        CBNZ     r5,|L16.194|
        MOV      r6,r7
        B        |L16.236|
|L16.184|
        MOV      r1,r5
        LDR      r0,[r4,#0]
        BL       get_fat
        MOV      r5,r0
|L16.194|
        ADDS     r0,r5,#1
        CBNZ     r0,|L16.204|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L16.24|
|L16.204|
        CMP      r5,#1
        BLS      |L16.216|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        CMP      r0,r5
        BHI      |L16.222|
|L16.216|
        MOVS     r0,#2
        STRB     r0,[r4,#7]
        B        |L16.24|
|L16.222|
        STR      r5,[r4,#0x14]
        LDR      r0,[r4,#8]
        ADD      r0,r0,r7
        STR      r0,[r4,#8]
        SUBS     r6,r6,r7
|L16.232|
        CMP      r6,r7
        BHI      |L16.160|
|L16.236|
        NOP      
        LDR      r0,[r4,#8]
        ADD      r0,r0,r6
        STR      r0,[r4,#8]
        UBFX     r0,r6,#0,#9
        CBZ      r0,|L16.276|
        MOV      r1,r5
        LDR      r0,[r4,#0]
        BL       clust2sect
        MOV      r8,r0
        CMP      r8,#0
        BNE      |L16.272|
        MOVS     r0,#2
        STRB     r0,[r4,#7]
        B        |L16.24|
|L16.272|
        ADD      r8,r8,r6,LSR #9
|L16.276|
        LDRH     r0,[r4,#8]
        UBFX     r0,r0,#0,#9
        CBZ      r0,|L16.358|
        LDR      r0,[r4,#0x18]
        CMP      r0,r8
        BEQ      |L16.358|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#0x40
        CBZ      r0,|L16.330|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOVS     r3,#1
        ADD      r1,r4,#0x24
        LDR      r2,[r4,#0x18]
        BL       disk_write
        CBZ      r0,|L16.322|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L16.24|
|L16.322|
        LDRB     r0,[r4,#6]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#6]
|L16.330|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOVS     r3,#1
        MOV      r2,r8
        ADD      r1,r4,#0x24
        BL       disk_read
        CBZ      r0,|L16.354|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L16.24|
|L16.354|
        STR      r8,[r4,#0x18]
|L16.358|
        LDRD     r0,r1,[r4,#8]
        CMP      r0,r1
        BLS      |L16.378|
        LDR      r0,[r4,#8]
        STR      r0,[r4,#0xc]
        LDRB     r0,[r4,#6]
        ORR      r0,r0,#0x20
        STRB     r0,[r4,#6]
|L16.378|
        MOV      r0,r10
        B        |L16.24|
        ENDP


        AREA ||i.f_mkdir||, CODE, READONLY, ALIGN=1

f_mkdir PROC
        PUSH     {r0,r4-r10,lr}
        SUB      sp,sp,#0x2c
        BL       get_fattime
        MOV      r6,r0
        MOVS     r2,#1
        ADD      r1,sp,#0x2c
        ADD      r0,sp,#0x10
        BL       find_volume
        MOV      r5,r0
        CMP      r5,#0
|L17.26|
        BNE      |L17.280|
        ADD      r0,sp,#4
        STR      r0,[sp,#0x28]
        ADD      r0,sp,#0x10
        LDR      r1,[sp,#0x2c]
        BL       follow_path
        MOV      r5,r0
        CBNZ     r5,|L17.46|
        MOVS     r5,#8
|L17.46|
        NOP      
        CMP      r5,#4
        BNE      |L17.26|
        MOVS     r1,#0
        LDR      r0,[sp,#0x10]
        BL       create_chain
        MOV      r7,r0
        MOVS     r5,#0
        CBNZ     r7,|L17.68|
        MOVS     r5,#7
|L17.68|
        CMP      r7,#1
        BNE      |L17.74|
        MOVS     r5,#2
|L17.74|
        ADDS     r0,r7,#1
        CBNZ     r0,|L17.80|
        MOVS     r5,#1
|L17.80|
        CBNZ     r5,|L17.90|
        LDR      r0,[sp,#0x10]
        BL       sync_window
        MOV      r5,r0
|L17.90|
        CMP      r5,#0
        BNE      |L17.276|
        MOV      r1,r7
        LDR      r0,[sp,#0x10]
        BL       clust2sect
        MOV      r9,r0
        LDR      r0,[sp,#0x10]
        ADD      r4,r0,#0x30
        MOV      r2,#0x200
        MOVS     r1,#0
        MOV      r0,r4
        BL       mem_set
        MOVS     r2,#0xb
        MOVS     r1,#0x20
        MOV      r0,r4
        BL       mem_set
        MOVS     r0,#0x2e
        STRB     r0,[r4,#0]
        MOVS     r0,#0x10
        STRB     r0,[r4,#0xb]
        STRB     r6,[r4,#0x16]
        LSRS     r1,r6,#8
        STRB     r1,[r4,#0x17]
        LSRS     r1,r6,#16
        STRB     r1,[r4,#0x18]
        LSRS     r1,r6,#24
        STRB     r1,[r4,#0x19]
        MOV      r1,r7
        MOV      r0,r4
        BL       st_clust
        MOVS     r2,#0x20
        MOV      r1,r4
        ADD      r0,r4,#0x20
        BL       mem_cpy
        MOVS     r0,#0x2e
        STRB     r0,[r4,#0x21]
        LDR      r10,[sp,#0x18]
        LDR      r0,[sp,#0x10]
        LDRB     r0,[r0,#0]
        CMP      r0,#3
        BNE      |L17.202|
        LDR      r0,[sp,#0x10]
        LDR      r0,[r0,#0x24]
        CMP      r0,r10
        BNE      |L17.202|
        MOV      r10,r5
|L17.202|
        MOV      r1,r10
        ADD      r0,r4,#0x20
        BL       st_clust
        LDR      r0,[sp,#0x10]
        LDRB     r8,[r0,#2]
        B        |L17.268|
|L17.220|
        LDR      r0,[sp,#0x10]
        STR      r9,[r0,#0x2c]
        ADD      r9,r9,#1
        MOVS     r0,#1
        LDR      r1,[sp,#0x10]
        STRB     r0,[r1,#4]
        LDR      r0,[sp,#0x10]
        BL       sync_window
        MOV      r5,r0
        CBZ      r5,|L17.248|
        B        |L17.274|
|L17.248|
        MOV      r2,#0x200
        MOVS     r1,#0
        MOV      r0,r4
        BL       mem_set
        SUB      r0,r8,#1
        AND      r8,r0,#0xff
|L17.268|
        CMP      r8,#0
        BNE      |L17.220|
|L17.274|
        NOP      
|L17.276|
        CBNZ     r5,|L17.290|
        B        |L17.282|
|L17.280|
        B        |L17.344|
|L17.282|
        ADD      r0,sp,#0x10
        BL       dir_register
        MOV      r5,r0
|L17.290|
        CBZ      r5,|L17.302|
        MOV      r1,r7
        LDR      r0,[sp,#0x10]
        BL       remove_chain
        B        |L17.344|
|L17.302|
        LDR      r4,[sp,#0x24]
        MOVS     r0,#0x10
        STRB     r0,[r4,#0xb]
        STRB     r6,[r4,#0x16]
        LSRS     r1,r6,#8
        STRB     r1,[r4,#0x17]
        LSRS     r1,r6,#16
        STRB     r1,[r4,#0x18]
        LSRS     r1,r6,#24
        STRB     r1,[r4,#0x19]
        MOV      r1,r7
        MOV      r0,r4
        BL       st_clust
        MOVS     r0,#1
        LDR      r1,[sp,#0x10]
        STRB     r0,[r1,#4]
        LDR      r0,[sp,#0x10]
        BL       sync_fs
        MOV      r5,r0
|L17.344|
        MOV      r0,r5
        ADD      sp,sp,#0x30
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.f_mkfs||, CODE, READONLY, ALIGN=2

f_mkfs PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#0x40
        MOV      r8,r2
        LDR      r0,[sp,#0x44]
        CMP      r0,#1
        BLE      |L18.22|
        MOVS     r0,#0x13
|L18.16|
        ADD      sp,sp,#0x4c
        POP      {r4-r11,pc}
|L18.22|
        ADD      r0,sp,#0x40
        BL       get_ldnumber
        STR      r0,[sp,#0x3c]
        LDR      r0,[sp,#0x3c]
        CMP      r0,#0
        BGE      |L18.40|
        MOVS     r0,#0xb
        B        |L18.16|
|L18.40|
        LDR      r1,|L18.1052|
        LDR      r0,[sp,#0x3c]
        LDR      r11,[r1,r0,LSL #2]
        CMP      r11,#0
        BNE      |L18.58|
        MOVS     r0,#0xc
        B        |L18.16|
|L18.58|
        MOVS     r0,#0
        STRB     r0,[r11,#0]
        LDR      r0,[sp,#0x3c]
        UXTB     r0,r0
        STR      r0,[sp,#0x30]
        MOVS     r0,#0
        STR      r0,[sp,#0x2c]
        LDR      r0,[sp,#0x30]
        BL       disk_initialize
        STR      r0,[sp,#4]
        LDR      r0,[sp,#4]
        AND      r0,r0,#1
        CBZ      r0,|L18.94|
        MOVS     r0,#3
        B        |L18.16|
|L18.94|
        LDR      r0,[sp,#4]
        AND      r0,r0,#4
        CBZ      r0,|L18.106|
        MOVS     r0,#0xa
        B        |L18.16|
|L18.106|
        NOP      
        ADD      r2,sp,#0x10
        MOVS     r1,#1
        LDR      r0,[sp,#0x30]
        BL       disk_ioctl
        CBNZ     r0,|L18.126|
        LDR      r0,[sp,#0x10]
        CMP      r0,#0x80
        BCS      |L18.130|
|L18.126|
        MOVS     r0,#1
        B        |L18.16|
|L18.130|
        LDR      r0,[sp,#0x44]
        CBZ      r0,|L18.138|
        MOVS     r0,#0
        B        |L18.140|
|L18.138|
        MOVS     r0,#0x3f
|L18.140|
        MOV      r9,r0
        LDR      r0,[sp,#0x10]
        SUB      r0,r0,r9
        STR      r0,[sp,#0x10]
        SUB      r0,r8,#1
        AND      r0,r0,r8
        CBZ      r0,|L18.164|
        MOV      r8,#0
|L18.164|
        CMP      r8,#0
        BNE      |L18.210|
        MOV      r1,#0x7d0
        LDR      r0,[sp,#0x10]
        UDIV     r0,r0,r1
        STR      r0,[sp,#0x28]
        MOV      r10,#0
        B        |L18.192|
|L18.188|
        ADD      r10,r10,#1
|L18.192|
        LDR      r0,|L18.1056|
        LDRH     r1,[r0,r10,LSL #1]
        LDR      r0,[sp,#0x28]
        CMP      r1,r0
        BHI      |L18.188|
        LDR      r0,|L18.1060|
        LDRH     r8,[r0,r10,LSL #1]
|L18.210|
        CMP      r8,#0x200
        BCC      |L18.220|
        LSR      r8,r8,#9
|L18.220|
        CMP      r8,#0
        BNE      |L18.230|
        MOV      r8,#1
|L18.230|
        CMP      r8,#0x80
        BLS      |L18.240|
        MOV      r8,#0x80
|L18.240|
        LDR      r0,[sp,#0x10]
        UDIV     r7,r0,r8
        MOVS     r5,#1
        MOV      r0,#0xff6
        CMP      r7,r0
        BCC      |L18.258|
        MOVS     r5,#2
|L18.258|
        MOV      r0,#0xfff6
        CMP      r7,r0
        BCC      |L18.268|
        MOVS     r5,#3
|L18.268|
        CMP      r5,#3
        BNE      |L18.294|
        MOVS     r0,#8
        ADD      r0,r0,r7,LSL #2
        ADD      r0,r0,#0x1ff
        LSRS     r6,r0,#9
        MOVS     r0,#0x20
        STR      r0,[sp,#0xc]
        MOVS     r0,#0
        STR      r0,[sp,#8]
        B        |L18.330|
|L18.294|
        CMP      r5,#1
        BNE      |L18.310|
        ADD      r0,r7,r7,LSL #1
        ADDS     r0,r0,#1
        LSRS     r0,r0,#1
        ADDS     r0,r0,#3
        B        |L18.314|
|L18.310|
        LSLS     r0,r7,#1
        ADDS     r0,r0,#4
|L18.314|
        MOV      r6,r0
        ADD      r0,r6,#0x1ff
        LSRS     r6,r0,#9
        MOVS     r0,#1
        STR      r0,[sp,#0xc]
        MOVS     r0,#0x20
        STR      r0,[sp,#8]
|L18.330|
        LDR      r0,[sp,#0xc]
        ADD      r0,r0,r9
        STR      r0,[sp,#0x1c]
        LDR      r0,[sp,#0x1c]
        ADD      r0,r0,r6
        STR      r0,[sp,#0x18]
        LDR      r1,[sp,#8]
        LDR      r0,[sp,#0x18]
        ADD      r0,r0,r1
        STR      r0,[sp,#0x14]
        LDR      r0,[sp,#0x14]
        ADD      r0,r0,r8
        SUB      r0,r0,r9
        LDR      r1,[sp,#0x10]
        CMP      r0,r1
        BLS      |L18.368|
        MOVS     r0,#0xe
        B        |L18.16|
|L18.368|
        ADD      r2,sp,#0x24
        MOVS     r1,#3
        LDR      r0,[sp,#0x30]
        BL       disk_ioctl
        CBNZ     r0,|L18.392|
        LDR      r0,[sp,#0x24]
        CBZ      r0,|L18.392|
        LDR      r0,[sp,#0x24]
        CMP      r0,#0x8000
        BLS      |L18.396|
|L18.392|
        MOVS     r0,#1
        STR      r0,[sp,#0x24]
|L18.396|
        LDR      r1,[sp,#0x24]
        LDR      r0,[sp,#0x14]
        ADD      r0,r0,r1
        SUBS     r0,r0,#1
        SUBS     r1,r1,#1
        BICS     r0,r0,r1
        STR      r0,[sp,#0x24]
        LDR      r1,[sp,#0x24]
        LDR      r0,[sp,#0x14]
        SUBS     r0,r1,r0
        STR      r0,[sp,#0x24]
        CMP      r5,#3
        BNE      |L18.440|
        LDR      r1,[sp,#0x24]
        LDR      r0,[sp,#0xc]
        ADD      r0,r0,r1
        STR      r0,[sp,#0xc]
        LDR      r1,[sp,#0x24]
        LDR      r0,[sp,#0x1c]
        ADD      r0,r0,r1
        STR      r0,[sp,#0x1c]
        B        |L18.444|
|L18.440|
        LDR      r0,[sp,#0x24]
        ADD      r6,r6,r0
|L18.444|
        LDRD     r0,r1,[sp,#0xc]
        SUBS     r0,r1,r0
        SUBS     r1,r0,r6
        LDR      r0,[sp,#8]
        SUBS     r0,r1,r0
        UDIV     r7,r0,r8
        CMP      r5,#2
        BNE      |L18.472|
        MOV      r0,#0xff6
        CMP      r7,r0
        BCC      |L18.484|
|L18.472|
        CMP      r5,#3
        BNE      |L18.488|
        MOV      r0,#0xfff6
        CMP      r7,r0
        BCS      |L18.488|
|L18.484|
        MOVS     r0,#0xe
        B        |L18.16|
|L18.488|
        CMP      r5,#3
        BNE      |L18.498|
        MOVS     r0,#0xc
        STR      r0,[sp,#0x34]
        B        |L18.532|
|L18.498|
        CMP      r5,#1
        BNE      |L18.516|
        LDR      r0,[sp,#0x10]
        CMP      r0,#0x10000
        BCS      |L18.516|
        MOVS     r0,#1
        STR      r0,[sp,#0x34]
        B        |L18.532|
|L18.516|
        LDR      r0,[sp,#0x10]
        CMP      r0,#0x10000
        BCS      |L18.528|
        MOVS     r0,#4
        B        |L18.530|
|L18.528|
        MOVS     r0,#6
|L18.530|
        STR      r0,[sp,#0x34]
|L18.532|
        NOP      
        LDR      r0,[sp,#0x44]
        CBZ      r0,|L18.544|
        MOVS     r0,#0xf0
        STR      r0,[sp,#0x38]
        B        |L18.682|
|L18.544|
        MOV      r2,#0x200
        MOVS     r1,#0
        ADD      r0,r11,#0x30
        BL       mem_set
        ADD      r4,r11,#0x1ee
        MOVS     r0,#1
        STRB     r0,[r4,#1]
        STRB     r0,[r4,#2]
        MOVS     r0,#0
        STRB     r0,[r4,#3]
        LDR      r0,[sp,#0x34]
        STRB     r0,[r4,#4]
        MOVS     r0,#0xfe
        STRB     r0,[r4,#5]
        LDR      r0,[sp,#0x10]
        ADD      r0,r0,r9
        MOVS     r1,#0x3f
        UDIV     r0,r0,r1
        MOVS     r1,#0xff
        UDIV     r0,r0,r1
        STR      r0,[sp,#0x24]
        MOVS     r1,#0x3f
        LDR      r0,[sp,#0x24]
        ORR      r0,r1,r0,LSR #2
        STRB     r0,[r4,#6]
        LDR      r0,[sp,#0x24]
        STRB     r0,[r4,#7]
        MOVS     r0,#0x3f
        STRB     r0,[r4,#8]
        MOVS     r1,#0
        STRB     r1,[r4,#9]
        STRB     r1,[r4,#0xa]
        STRB     r1,[r4,#0xb]
        LDR      r0,[sp,#0x10]
        STRB     r0,[r4,#0xc]
        LDR      r0,[sp,#0x10]
        LSRS     r1,r0,#8
        STRB     r1,[r4,#0xd]
        LDR      r0,[sp,#0x10]
        LSRS     r1,r0,#16
        STRB     r1,[r4,#0xe]
        LDR      r0,[sp,#0x10]
        LSRS     r1,r0,#24
        STRB     r1,[r4,#0xf]
        MOVS     r1,#0x55
        STRB     r1,[r11,#0x22e]
        MOVS     r1,#0xaa
        STRB     r1,[r11,#0x22f]
        MOVS     r3,#1
        MOVS     r2,#0
        ADD      r1,r11,#0x30
        LDR      r0,[sp,#0x30]
        BL       disk_write
        CBZ      r0,|L18.678|
        MOVS     r0,#1
        B        |L18.16|
|L18.678|
        MOVS     r0,#0xf8
        STR      r0,[sp,#0x38]
|L18.682|
        ADD      r4,r11,#0x30
        MOV      r2,#0x200
        MOVS     r1,#0
        MOV      r0,r4
        BL       mem_set
        MOVS     r2,#0xb
        ADR      r1,|L18.1064|
        MOV      r0,r4
        BL       mem_cpy
        MOV      r10,#0x200
        STRB     r10,[r4,#0xb]
        LSR      r1,r10,#8
        STRB     r1,[r4,#0xc]
        STRB     r8,[r4,#0xd]
        LDR      r0,[sp,#0xc]
        STRB     r0,[r4,#0xe]
        LDR      r0,[sp,#0xc]
        LSRS     r1,r0,#8
        STRB     r1,[r4,#0xf]
        MOVS     r0,#1
        STRB     r0,[r4,#0x10]
        CMP      r5,#3
        BNE      |L18.748|
        MOVS     r0,#0
        B        |L18.752|
|L18.748|
        MOV      r0,#0x200
|L18.752|
        MOV      r10,r0
        STRB     r10,[r4,#0x11]
        LSR      r1,r10,#8
        STRB     r1,[r4,#0x12]
        LDR      r0,[sp,#0x10]
        CMP      r0,#0x10000
        BCS      |L18.784|
        LDR      r0,[sp,#0x10]
        STRB     r0,[r4,#0x13]
        LDR      r0,[sp,#0x10]
        LSRS     r1,r0,#8
        STRB     r1,[r4,#0x14]
        B        |L18.818|
|L18.784|
        LDR      r0,[sp,#0x10]
        STRB     r0,[r4,#0x20]
        LDR      r0,[sp,#0x10]
        UBFX     r1,r0,#8,#8
        MOVS     r0,#0x21
        STRB     r1,[r0,r4]
        LDR      r0,[sp,#0x10]
        UBFX     r1,r0,#16,#8
        MOVS     r0,#0x22
        STRB     r1,[r0,r4]
        LDR      r0,[sp,#0x10]
        LSRS     r1,r0,#24
        MOVS     r0,#0x23
        STRB     r1,[r0,r4]
|L18.818|
        LDR      r0,[sp,#0x38]
        STRB     r0,[r4,#0x15]
        MOVS     r0,#0x3f
        STRB     r0,[r4,#0x18]
        MOVS     r1,#0
        STRB     r1,[r4,#0x19]
        MOVS     r0,#0xff
        STRB     r0,[r4,#0x1a]
        STRB     r1,[r4,#0x1b]
        STRB     r9,[r4,#0x1c]
        LSR      r1,r9,#8
        STRB     r1,[r4,#0x1d]
        LSR      r1,r9,#16
        STRB     r1,[r4,#0x1e]
        LSR      r1,r9,#24
        STRB     r1,[r4,#0x1f]
        BL       get_fattime
        STR      r0,[sp,#0x24]
        CMP      r5,#3
        BNE      |L18.994|
        LDR      r0,[sp,#0x24]
        STRB     r0,[r4,#0x43]
        LDR      r0,[sp,#0x24]
        UBFX     r1,r0,#8,#8
        MOVS     r0,#0x44
        STRB     r1,[r0,r4]
        LDR      r0,[sp,#0x24]
        UBFX     r1,r0,#16,#8
        MOVS     r0,#0x45
        STRB     r1,[r0,r4]
        LDR      r0,[sp,#0x24]
        LSRS     r1,r0,#24
        MOVS     r0,#0x46
        STRB     r1,[r0,r4]
        STRB     r6,[r4,#0x24]
        UBFX     r1,r6,#8,#8
        MOVS     r0,#0x25
        STRB     r1,[r0,r4]
        UBFX     r1,r6,#16,#8
        MOVS     r0,#0x26
        STRB     r1,[r0,r4]
        LSRS     r1,r6,#24
        MOVS     r0,#0x27
        STRB     r1,[r0,r4]
        MOVS     r0,#2
        STRB     r0,[r4,#0x2c]
        MOVS     r1,#0
        MOVS     r0,#0x2d
        STRB     r1,[r0,r4]
        MOVS     r0,#0x2e
        STRB     r1,[r0,r4]
        MOVS     r0,#0x2f
        STRB     r1,[r0,r4]
        MOVS     r0,#1
        STRB     r0,[r4,#0x30]
        MOVS     r0,#0x31
        STRB     r1,[r0,r4]
        MOVS     r0,#6
        STRB     r0,[r4,#0x32]
        MOVS     r0,#0x33
        STRB     r1,[r0,r4]
        MOVS     r0,#0x80
        STRB     r0,[r4,#0x40]
        MOVS     r0,#0x29
        STRB     r0,[r4,#0x42]
        MOVS     r2,#0x13
        ADR      r1,|L18.1076|
        ADD      r0,r4,#0x47
        BL       mem_cpy
        B        |L18.1106|
|L18.994|
        LDR      r0,[sp,#0x24]
        STRB     r0,[r4,#0x27]
        LDR      r0,[sp,#0x24]
        UBFX     r1,r0,#8,#8
        MOVS     r0,#0x28
        STRB     r1,[r0,r4]
        LDR      r0,[sp,#0x24]
        UBFX     r1,r0,#16,#8
        MOVS     r0,#0x29
        STRB     r1,[r0,r4]
        LDR      r0,[sp,#0x24]
        LSRS     r1,r0,#24
        MOVS     r0,#0x2a
        STRB     r1,[r0,r4]
        STRB     r6,[r4,#0x16]
        LSRS     r1,r6,#8
        STRB     r1,[r4,#0x17]
        MOVS     r0,#0x80
        STRB     r0,[r4,#0x24]
        MOVS     r0,#0x29
        STRB     r0,[r4,#0x26]
        MOVS     r2,#0x13
        B        |L18.1096|
        DCW      0x0000
|L18.1052|
        DCD      FatFs
|L18.1056|
        DCD      vst
|L18.1060|
        DCD      ||cst||
|L18.1064|
        DCB      235,254,144,"MSDOS5.0",0
|L18.1076|
        DCB      "NO NAME    FAT32   ",0
|L18.1096|
        ADR      r1,|L18.1584|
        ADD      r0,r4,#0x2b
        BL       mem_cpy
|L18.1106|
        MOVS     r0,#0x55
        STRB     r0,[r4,#0x1fe]
        MOVS     r1,#0xaa
        MOV      r0,#0x1ff
        STRB     r1,[r0,r4]
        MOVS     r3,#1
        MOV      r2,r9
        MOV      r1,r4
        LDR      r0,[sp,#0x30]
        BL       disk_write
        CBZ      r0,|L18.1138|
        MOVS     r0,#1
        B        |L18.16|
|L18.1138|
        CMP      r5,#3
        BNE      |L18.1156|
        MOVS     r3,#1
        ADD      r2,r9,#6
        MOV      r1,r4
        LDR      r0,[sp,#0x30]
        BL       disk_write
|L18.1156|
        LDR      r0,[sp,#0x1c]
        STR      r0,[sp,#0x20]
        MOV      r10,#0
        B        |L18.1362|
|L18.1166|
        MOV      r2,#0x200
        MOVS     r1,#0
        MOV      r0,r4
        BL       mem_set
        LDR      r0,[sp,#0x38]
        STR      r0,[sp,#0x24]
        CMP      r5,#3
        BEQ      |L18.1228|
        CMP      r5,#1
        BNE      |L18.1194|
        LDR      r0,|L18.1604|
        B        |L18.1198|
|L18.1194|
        MVN      r0,#0xff
|L18.1198|
        LDR      r1,[sp,#0x24]
        ORRS     r0,r0,r1
        STR      r0,[sp,#0x24]
        LDR      r0,[sp,#0x24]
        STRB     r0,[r4,#0]
        LDR      r0,[sp,#0x24]
        LSRS     r0,r0,#8
        STRB     r0,[r4,#1]
        LDR      r0,[sp,#0x24]
        LSRS     r0,r0,#16
        STRB     r0,[r4,#2]
        LDR      r0,[sp,#0x24]
        LSRS     r0,r0,#24
        STRB     r0,[r4,#3]
        B        |L18.1280|
|L18.1228|
        LDR      r0,[sp,#0x24]
        ORN      r0,r0,#0xff
        STR      r0,[sp,#0x24]
        LDR      r0,[sp,#0x24]
        STRB     r0,[r4,#0]
        LDR      r0,[sp,#0x24]
        LSRS     r0,r0,#8
        STRB     r0,[r4,#1]
        LDR      r0,[sp,#0x24]
        LSRS     r0,r0,#16
        STRB     r0,[r4,#2]
        LDR      r0,[sp,#0x24]
        LSRS     r0,r0,#24
        STRB     r0,[r4,#3]
        MOVS     r0,#0xff
        STRB     r0,[r4,#4]
        MOVS     r1,#0xff
        STRB     r1,[r4,#5]
        STRB     r1,[r4,#6]
        STRB     r1,[r4,#7]
        STRB     r0,[r4,#8]
        STRB     r1,[r4,#9]
        STRB     r1,[r4,#0xa]
        MOVS     r1,#0xf
        STRB     r1,[r4,#0xb]
|L18.1280|
        LDR      r0,[sp,#0x20]
        ADDS     r1,r0,#1
        MOV      r2,r0
        MOVS     r3,#1
        STR      r1,[sp,#0x20]
        MOV      r1,r4
        LDR      r0,[sp,#0x30]
        BL       disk_write
        CBZ      r0,|L18.1304|
        MOVS     r0,#1
        B        |L18.16|
|L18.1304|
        MOV      r2,#0x200
        MOVS     r1,#0
        MOV      r0,r4
        BL       mem_set
        MOVS     r0,#1
        STR      r0,[sp,#0x24]
        B        |L18.1352|
|L18.1322|
        LDR      r0,[sp,#0x20]
        ADDS     r1,r0,#1
        MOV      r2,r0
        MOVS     r3,#1
        STR      r1,[sp,#0x20]
        MOV      r1,r4
        LDR      r0,[sp,#0x30]
        BL       disk_write
        CBZ      r0,|L18.1346|
        MOVS     r0,#1
        B        |L18.16|
|L18.1346|
        LDR      r0,[sp,#0x24]
        ADDS     r0,r0,#1
        STR      r0,[sp,#0x24]
|L18.1352|
        LDR      r0,[sp,#0x24]
        CMP      r0,r6
        BCC      |L18.1322|
        ADD      r10,r10,#1
|L18.1362|
        CMP      r10,#0
        BEQ      |L18.1166|
        CMP      r5,#3
        BNE      |L18.1376|
        MOV      r0,r8
        B        |L18.1378|
|L18.1376|
        LDR      r0,[sp,#8]
|L18.1378|
        MOV      r10,r0
        NOP      
|L18.1382|
        LDR      r0,[sp,#0x20]
        ADDS     r1,r0,#1
        MOV      r2,r0
        MOVS     r3,#1
        STR      r1,[sp,#0x20]
        MOV      r1,r4
        LDR      r0,[sp,#0x30]
        BL       disk_write
        CBZ      r0,|L18.1406|
        MOVS     r0,#1
        B        |L18.16|
|L18.1406|
        SUB      r0,r10,#1
        SUBS     r10,r0,#0
        BNE      |L18.1382|
        CMP      r5,#3
        BNE      |L18.1562|
        MOVS     r0,#0x52
        STRB     r0,[r4,#0]
        STRB     r0,[r4,#1]
        MOVS     r0,#0x61
        STRB     r0,[r4,#2]
        MOVS     r0,#0x41
        STRB     r0,[r4,#3]
        MOVS     r0,#0x72
        STRB     r0,[r4,#0x1e4]
        MOVS     r1,#0x72
        MOV      r0,#0x1e5
        STRB     r1,[r0,r4]
        MOVS     r1,#0x41
        ADDS     r0,r0,#1
        STRB     r1,[r0,r4]
        MOVS     r1,#0x61
        ADDS     r0,r0,#1
        STRB     r1,[r0,r4]
        SUBS     r0,r7,#1
        STRB     r0,[r4,#0x1e8]
        UBFX     r1,r0,#8,#8
        MOV      r0,#0x1e9
        STRB     r1,[r0,r4]
        SUBS     r0,r7,#1
        UBFX     r1,r0,#16,#8
        MOV      r0,#0x1ea
        STRB     r1,[r0,r4]
        SUBS     r0,r7,#1
        LSRS     r1,r0,#24
        MOV      r0,#0x1eb
        STRB     r1,[r0,r4]
        MOVS     r0,#2
        STRB     r0,[r4,#0x1ec]
        MOVS     r1,#0
        MOV      r0,#0x1ed
        STRB     r1,[r0,r4]
        ADDS     r0,r0,#1
        STRB     r1,[r0,r4]
        ADDS     r0,r0,#1
        STRB     r1,[r0,r4]
        MOVS     r0,#0x55
        STRB     r0,[r4,#0x1fe]
        MOVS     r1,#0xaa
        MOV      r0,#0x1ff
        STRB     r1,[r0,r4]
        MOVS     r3,#1
        ADD      r2,r9,#1
        MOV      r1,r4
        LDR      r0,[sp,#0x30]
        BL       disk_write
        MOVS     r3,#1
        ADD      r2,r9,#7
        MOV      r1,r4
        LDR      r0,[sp,#0x30]
        BL       disk_write
|L18.1562|
        MOVS     r2,#0
        MOV      r1,r2
        LDR      r0,[sp,#0x30]
        BL       disk_ioctl
        CBZ      r0,|L18.1578|
        MOVS     r0,#1
        B        |L18.16|
|L18.1578|
        MOVS     r0,#0
        B        |L18.16|
        ENDP

        DCW      0x0000
|L18.1584|
        DCB      "NO NAME    FAT     ",0
|L18.1604|
        DCD      0x00ffff00

        AREA ||i.f_mount||, CODE, READONLY, ALIGN=2

f_mount PROC
        PUSH     {r0-r2,r4-r7,lr}
        SUB      sp,sp,#8
        MOV      r6,r2
        LDR      r0,[sp,#0xc]
        STR      r0,[sp,#4]
        ADD      r0,sp,#4
        BL       get_ldnumber
        MOV      r5,r0
        CMP      r5,#0
        BGE      |L19.28|
        MOVS     r0,#0xb
|L19.24|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
|L19.28|
        LDR      r0,|L19.88|
        LDR      r4,[r0,r5,LSL #2]
        CBZ      r4,|L19.40|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
|L19.40|
        LDR      r0,[sp,#8]
        CBZ      r0,|L19.50|
        MOVS     r0,#0
        LDR      r1,[sp,#8]
        STRB     r0,[r1,#0]
|L19.50|
        LDR      r1,|L19.88|
        LDR      r0,[sp,#8]
        STR      r0,[r1,r5,LSL #2]
        LDR      r0,[sp,#8]
        CBZ      r0,|L19.66|
        CMP      r6,#1
        BEQ      |L19.70|
|L19.66|
        MOVS     r0,#0
        B        |L19.24|
|L19.70|
        MOVS     r2,#0
        ADD      r1,sp,#0xc
        ADD      r0,sp,#8
        BL       find_volume
        MOV      r7,r0
        MOV      r0,r7
        B        |L19.24|
        ENDP

        DCW      0x0000
|L19.88|
        DCD      FatFs

        AREA ||i.f_open||, CODE, READONLY, ALIGN=1

f_open PROC
        PUSH     {r0-r2,r4-r9,lr}
        SUB      sp,sp,#0x28
        MOV      r5,r0
        MOV      r6,r2
        CBNZ     r5,|L20.20|
        MOVS     r0,#9
|L20.14|
        ADD      sp,sp,#0x34
        POP      {r4-r9,pc}
|L20.20|
        MOVS     r0,#0
        STR      r0,[r5,#0]
        AND      r6,r6,#0x1f
        BIC      r2,r6,#1
        ADD      r1,sp,#0x2c
        ADD      r0,sp,#0xc
        BL       find_volume
        MOV      r7,r0
        CMP      r7,#0
        BNE      |L20.300|
        STR      sp,[sp,#0x24]
        ADD      r0,sp,#0xc
        LDR      r1,[sp,#0x2c]
        BL       follow_path
        MOV      r7,r0
        LDR      r4,[sp,#0x20]
        CBNZ     r7,|L20.68|
        CBNZ     r4,|L20.68|
        MOVS     r7,#6
|L20.68|
        AND      r0,r6,#0x1c
        CMP      r0,#0
        BEQ      |L20.240|
        CBZ      r7,|L20.98|
        CMP      r7,#4
        BNE      |L20.90|
        ADD      r0,sp,#0xc
        BL       dir_register
        MOV      r7,r0
|L20.90|
        ORR      r6,r6,#8
        LDR      r4,[sp,#0x20]
        B        |L20.118|
|L20.98|
        LDRB     r0,[r4,#0xb]
        AND      r0,r0,#0x11
        CBZ      r0,|L20.110|
        MOVS     r7,#7
        B        |L20.118|
|L20.110|
        AND      r0,r6,#4
        CBZ      r0,|L20.118|
        MOVS     r7,#8
|L20.118|
        CMP      r7,#0
        BNE      |L20.270|
        AND      r0,r6,#8
        CMP      r0,#0
        BEQ      |L20.270|
        BL       get_fattime
        MOV      r8,r0
        STRB     r8,[r4,#0xe]
        LSR      r1,r8,#8
        STRB     r1,[r4,#0xf]
        LSR      r1,r8,#16
        STRB     r1,[r4,#0x10]
        LSR      r1,r8,#24
        STRB     r1,[r4,#0x11]
        MOVS     r0,#0
        STRB     r0,[r4,#0xb]
        STRB     r0,[r4,#0x1c]
        MOVS     r1,#0
        STRB     r1,[r4,#0x1d]
        STRB     r1,[r4,#0x1e]
        STRB     r1,[r4,#0x1f]
        MOV      r1,r4
        LDR      r0,[sp,#0xc]
        BL       ld_clust
        MOV      r9,r0
        MOVS     r1,#0
        MOV      r0,r4
        BL       st_clust
        MOVS     r0,#1
        LDR      r1,[sp,#0xc]
        STRB     r0,[r1,#4]
        CMP      r9,#0
        BEQ      |L20.270|
        LDR      r0,[sp,#0xc]
        LDR      r8,[r0,#0x2c]
        MOV      r1,r9
        LDR      r0,[sp,#0xc]
        BL       remove_chain
        MOV      r7,r0
        CBNZ     r7,|L20.270|
        SUB      r0,r9,#1
        LDR      r1,[sp,#0xc]
        STR      r0,[r1,#0xc]
        MOV      r1,r8
        LDR      r0,[sp,#0xc]
        BL       move_window
        MOV      r7,r0
        B        |L20.270|
|L20.240|
        CBNZ     r7,|L20.270|
        LDRB     r0,[r4,#0xb]
        AND      r0,r0,#0x10
        CBZ      r0,|L20.254|
        MOVS     r7,#4
        B        |L20.270|
|L20.254|
        AND      r0,r6,#2
        CBZ      r0,|L20.270|
        LDRB     r0,[r4,#0xb]
        AND      r0,r0,#1
        CBZ      r0,|L20.270|
        MOVS     r7,#7
|L20.270|
        CBNZ     r7,|L20.290|
        AND      r0,r6,#8
        CBZ      r0,|L20.282|
        ORR      r6,r6,#0x20
|L20.282|
        LDR      r0,[sp,#0xc]
        LDR      r0,[r0,#0x2c]
        STR      r0,[r5,#0x1c]
        STR      r4,[r5,#0x20]
|L20.290|
        CBNZ     r7,|L20.300|
        STRB     r6,[r5,#6]
        MOVS     r0,#0
        STRB     r0,[r5,#7]
        B        |L20.302|
|L20.300|
        B        |L20.350|
|L20.302|
        MOV      r1,r4
        LDR      r0,[sp,#0xc]
        BL       ld_clust
        STR      r0,[r5,#0x10]
        LDRB     r0,[r4,#0x1f]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x1e]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x1d]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x1c]
        ORRS     r0,r0,r1
        STR      r0,[r5,#0xc]
        MOVS     r0,#0
        STR      r0,[r5,#8]
        STR      r0,[r5,#0x18]
        LDR      r0,[sp,#0xc]
        STR      r0,[r5,#0]
        LDR      r0,[r5,#0]
        LDRH     r0,[r0,#6]
        STRH     r0,[r5,#4]
|L20.350|
        MOV      r0,r7
        B        |L20.14|
        ENDP


        AREA ||i.f_opendir||, CODE, READONLY, ALIGN=1

f_opendir PROC
        PUSH     {r0,r1,r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        CBNZ     r4,|L21.14|
        MOVS     r0,#9
|L21.10|
        ADD      sp,sp,#0x1c
        POP      {r4,r5,pc}
|L21.14|
        MOVS     r2,#0
        ADD      r1,sp,#0x18
        ADD      r0,sp,#0x10
        BL       find_volume
        MOV      r5,r0
        CBNZ     r5,|L21.100|
        LDR      r0,[sp,#0x10]
        STR      r0,[r4,#0]
        ADD      r0,sp,#4
        STR      r0,[r4,#0x18]
        MOV      r0,r4
        LDR      r1,[sp,#0x18]
        BL       follow_path
        MOV      r5,r0
        CBNZ     r5,|L21.94|
        LDR      r0,[r4,#0x14]
        CBZ      r0,|L21.76|
        LDR      r0,[r4,#0x14]
        LDRB     r0,[r0,#0xb]
        AND      r0,r0,#0x10
        CBZ      r0,|L21.74|
        LDR      r1,[r4,#0x14]
        LDR      r0,[sp,#0x10]
        BL       ld_clust
        STR      r0,[r4,#8]
        B        |L21.76|
|L21.74|
        MOVS     r5,#5
|L21.76|
        CBNZ     r5,|L21.94|
        LDR      r0,[sp,#0x10]
        LDRH     r0,[r0,#6]
        STRH     r0,[r4,#4]
        MOVS     r1,#0
        MOV      r0,r4
        BL       dir_sdi
        MOV      r5,r0
|L21.94|
        CMP      r5,#4
        BNE      |L21.100|
        MOVS     r5,#5
|L21.100|
        CBZ      r5,|L21.106|
        MOVS     r0,#0
        STR      r0,[r4,#0]
|L21.106|
        MOV      r0,r5
        B        |L21.10|
        ENDP


        AREA ||i.f_read||, CODE, READONLY, ALIGN=1

f_read PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#0xc
        MOV      r4,r0
        MOV      r5,r2
        MOV      r10,r3
        LDR      r11,[sp,#0x10]
        MOVS     r0,#0
        STR      r0,[r10,#0]
        MOV      r0,r4
        BL       validate
        STR      r0,[sp,#8]
        LDR      r0,[sp,#8]
        CBZ      r0,|L22.42|
        LDR      r0,[sp,#8]
|L22.36|
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
|L22.42|
        LDRB     r0,[r4,#7]
        CBZ      r0,|L22.50|
        LDRB     r0,[r4,#7]
        B        |L22.36|
|L22.50|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#1
        CBNZ     r0,|L22.62|
        MOVS     r0,#7
        B        |L22.36|
|L22.62|
        LDRD     r1,r0,[r4,#8]
        SUBS     r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[sp,#0]
        CMP      r5,r0
        BLS      |L22.78|
        LDR      r5,[sp,#0]
|L22.78|
        B        |L22.406|
|L22.80|
        LDRH     r0,[r4,#8]
        UBFX     r0,r0,#0,#9
        CMP      r0,#0
        BNE      |L22.344|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        SUBS     r0,r0,#1
        LDR      r1,[r4,#8]
        AND      r0,r0,r1,LSR #9
        AND      r9,r0,#0xff
        CMP      r9,#0
        BNE      |L22.160|
        LDR      r0,[r4,#8]
        CBNZ     r0,|L22.122|
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#4]
        B        |L22.132|
|L22.122|
        LDR      r1,[r4,#0x14]
        LDR      r0,[r4,#0]
        BL       get_fat
        STR      r0,[sp,#4]
|L22.132|
        LDR      r0,[sp,#4]
        CMP      r0,#2
        BCS      |L22.144|
        MOVS     r0,#2
        STRB     r0,[r4,#7]
        B        |L22.36|
|L22.144|
        LDR      r0,[sp,#4]
        ADDS     r0,r0,#1
        CBNZ     r0,|L22.156|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L22.36|
|L22.156|
        LDR      r0,[sp,#4]
        STR      r0,[r4,#0x14]
|L22.160|
        LDR      r1,[r4,#0x14]
        LDR      r0,[r4,#0]
        BL       clust2sect
        MOV      r6,r0
        CBNZ     r6,|L22.178|
        MOVS     r0,#2
        STRB     r0,[r4,#7]
        B        |L22.36|
|L22.178|
        ADD      r6,r6,r9
        LSR      r8,r5,#9
        CMP      r8,#0
        BEQ      |L22.274|
        ADD      r0,r9,r8
        LDR      r1,[r4,#0]
        LDRB     r1,[r1,#2]
        CMP      r0,r1
        BLS      |L22.210|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        SUB      r8,r0,r9
|L22.210|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOV      r3,r8
        MOV      r2,r6
        MOV      r1,r11
        BL       disk_read
        CBZ      r0,|L22.232|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L22.36|
|L22.232|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#0x40
        CBZ      r0,|L22.268|
        LDR      r0,[r4,#0x18]
        SUBS     r0,r0,r6
        CMP      r0,r8
        BCS      |L22.268|
        LDR      r1,[r4,#0x18]
        SUBS     r1,r1,r6
        ADD      r0,r11,r1,LSL #9
        MOV      r2,#0x200
        ADD      r1,r4,#0x24
        BL       mem_cpy
|L22.268|
        LSL      r7,r8,#9
        B        |L22.386|
|L22.274|
        LDR      r0,[r4,#0x18]
        CMP      r0,r6
        BEQ      |L22.346|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#0x40
        CBZ      r0,|L22.320|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOVS     r3,#1
        ADD      r1,r4,#0x24
        LDR      r2,[r4,#0x18]
        BL       disk_write
        CBZ      r0,|L22.312|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L22.36|
|L22.312|
        LDRB     r0,[r4,#6]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#6]
|L22.320|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOVS     r3,#1
        MOV      r2,r6
        ADD      r1,r4,#0x24
        BL       disk_read
        CBZ      r0,|L22.346|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L22.36|
|L22.344|
        B        |L22.348|
|L22.346|
        STR      r6,[r4,#0x18]
|L22.348|
        LDRH     r0,[r4,#8]
        UBFX     r0,r0,#0,#9
        RSB      r7,r0,#0x200
        CMP      r7,r5
        BLS      |L22.364|
        MOV      r7,r5
|L22.364|
        LDRH     r0,[r4,#8]
        UBFX     r2,r0,#0,#9
        ADD      r0,r4,#0x24
        ADDS     r1,r2,r0
        MOV      r2,r7
        MOV      r0,r11
        BL       mem_cpy
        NOP      
|L22.386|
        ADD      r11,r11,r7
        LDR      r0,[r4,#8]
        ADD      r0,r0,r7
        STR      r0,[r4,#8]
        LDR      r0,[r10,#0]
        ADD      r0,r0,r7
        STR      r0,[r10,#0]
        SUBS     r5,r5,r7
|L22.406|
        CMP      r5,#0
        BNE      |L22.80|
        MOVS     r0,#0
        B        |L22.36|
        ENDP


        AREA ||i.f_readdir||, CODE, READONLY, ALIGN=1

f_readdir PROC
        PUSH     {r1-r7,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r0,r5
        BL       validate
        MOV      r4,r0
        CBNZ     r4,|L23.84|
        CBNZ     r6,|L23.30|
        MOVS     r1,#0
        MOV      r0,r5
        BL       dir_sdi
        MOV      r4,r0
        B        |L23.84|
|L23.30|
        STR      sp,[r5,#0x18]
        MOVS     r1,#0
        MOV      r0,r5
        BL       dir_read
        MOV      r4,r0
        CMP      r4,#4
        BNE      |L23.54|
        MOVS     r0,#0
        STR      r0,[r5,#0x10]
        MOVS     r4,#0
|L23.54|
        CBNZ     r4,|L23.84|
        MOV      r1,r6
        MOV      r0,r5
        BL       get_fileinfo
        MOVS     r1,#0
        MOV      r0,r5
        BL       dir_next
        MOV      r4,r0
        CMP      r4,#4
        BNE      |L23.84|
        MOVS     r0,#0
        STR      r0,[r5,#0x10]
        MOVS     r4,#0
|L23.84|
        MOV      r0,r4
        POP      {r1-r7,pc}
        ENDP


        AREA ||i.f_rename||, CODE, READONLY, ALIGN=1

f_rename PROC
        PUSH     {r0,r1,r4-r7,lr}
        SUB      sp,sp,#0x5c
        MOVS     r2,#1
        ADD      r1,sp,#0x5c
        ADD      r0,sp,#0x40
        BL       find_volume
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L24.252|
        LDR      r0,[sp,#0x40]
        STR      r0,[sp,#0x24]
        STR      sp,[sp,#0x58]
        ADD      r0,sp,#0x40
        LDR      r1,[sp,#0x5c]
        BL       follow_path
        MOV      r4,r0
        NOP      
        CMP      r4,#0
        BNE      |L24.252|
        LDR      r0,[sp,#0x54]
        CBNZ     r0,|L24.52|
        MOVS     r4,#4
        B        |L24.252|
|L24.52|
        LDR      r0,[sp,#0x54]
        ADD      r1,r0,#0xb
        MOVS     r2,#0x15
        ADD      r0,sp,#0xc
        BL       mem_cpy
        MOVS     r2,#0x1c
        ADD      r1,sp,#0x40
        ADD      r0,sp,#0x24
        BL       mem_cpy
        ADD      r0,sp,#0x60
        BL       get_ldnumber
        CMP      r0,#0
        BLT      |L24.98|
        ADD      r0,sp,#0x24
        LDR      r1,[sp,#0x60]
        BL       follow_path
        MOV      r4,r0
        B        |L24.100|
|L24.98|
        MOVS     r4,#0xb
|L24.100|
        CBNZ     r4,|L24.104|
        MOVS     r4,#8
|L24.104|
        CMP      r4,#4
        BNE      |L24.252|
        ADD      r0,sp,#0x24
        BL       dir_register
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L24.252|
        LDR      r5,[sp,#0x38]
        MOVS     r2,#0x13
        ADD      r1,sp,#0xe
        ADD      r0,r5,#0xd
        BL       mem_cpy
        LDRB     r0,[sp,#0xc]
        ORR      r0,r0,#0x20
        STRB     r0,[r5,#0xb]
        MOVS     r0,#1
        LDR      r1,[sp,#0x40]
        STRB     r0,[r1,#4]
        LDRB     r0,[r5,#0xb]
        AND      r0,r0,#0x10
        CBZ      r0,|L24.232|
        LDR      r1,[sp,#0x2c]
        LDR      r0,[sp,#0x48]
        CMP      r0,r1
        BEQ      |L24.232|
        MOV      r1,r5
        LDR      r0,[sp,#0x40]
        BL       ld_clust
        MOV      r7,r0
        MOV      r1,r7
        LDR      r0,[sp,#0x40]
        BL       clust2sect
        MOV      r6,r0
        CBNZ     r6,|L24.194|
        MOVS     r4,#2
        B        |L24.232|
|L24.194|
        MOV      r1,r6
        LDR      r0,[sp,#0x40]
        BL       move_window
        MOV      r4,r0
        LDR      r0,[sp,#0x40]
        ADD      r5,r0,#0x50
        CBNZ     r4,|L24.232|
        LDRB     r0,[r5,#1]
        CMP      r0,#0x2e
        BNE      |L24.232|
        MOV      r0,r5
        LDR      r1,[sp,#0x2c]
        BL       st_clust
        MOVS     r0,#1
        LDR      r1,[sp,#0x40]
        STRB     r0,[r1,#4]
|L24.232|
        CBNZ     r4,|L24.252|
        ADD      r0,sp,#0x40
        BL       dir_remove
        MOV      r4,r0
        CBNZ     r4,|L24.252|
        LDR      r0,[sp,#0x40]
        BL       sync_fs
        MOV      r4,r0
|L24.252|
        MOV      r0,r4
        ADD      sp,sp,#0x64
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.f_stat||, CODE, READONLY, ALIGN=1

f_stat PROC
        PUSH     {r0,r1,r4,r5,lr}
        SUB      sp,sp,#0x2c
        MOV      r5,r1
        MOVS     r2,#0
        ADD      r1,sp,#0x2c
        ADD      r0,sp,#0x10
        BL       find_volume
        MOV      r4,r0
        CBNZ     r4,|L25.54|
        ADD      r0,sp,#4
        STR      r0,[sp,#0x28]
        ADD      r0,sp,#0x10
        LDR      r1,[sp,#0x2c]
        BL       follow_path
        MOV      r4,r0
        CBNZ     r4,|L25.54|
        LDR      r0,[sp,#0x24]
        CBZ      r0,|L25.52|
        CBZ      r5,|L25.54|
        MOV      r1,r5
        ADD      r0,sp,#0x10
        BL       get_fileinfo
        B        |L25.54|
|L25.52|
        MOVS     r4,#6
|L25.54|
        MOV      r0,r4
        ADD      sp,sp,#0x34
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.f_sync||, CODE, READONLY, ALIGN=1

f_sync PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       validate
        MOV      r7,r0
        CMP      r7,#0
        BNE      |L26.172|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#0x20
        CMP      r0,#0
        BEQ      |L26.172|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#0x40
        CBZ      r0,|L26.68|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOVS     r3,#1
        ADD      r1,r4,#0x24
        LDR      r2,[r4,#0x18]
        BL       disk_write
        CBZ      r0,|L26.60|
        MOVS     r0,#1
|L26.56|
        POP      {r4-r8,pc}
|L26.60|
        LDRB     r0,[r4,#6]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#6]
|L26.68|
        LDR      r1,[r4,#0x1c]
        LDR      r0,[r4,#0]
        BL       move_window
        MOV      r7,r0
        CMP      r7,#0
        BNE      |L26.172|
        LDR      r5,[r4,#0x20]
        LDRB     r0,[r5,#0xb]
        ORR      r0,r0,#0x20
        STRB     r0,[r5,#0xb]
        LDRB     r0,[r4,#0xc]
        STRB     r0,[r5,#0x1c]
        LDRH     r0,[r4,#0xc]
        LSRS     r1,r0,#8
        STRB     r1,[r5,#0x1d]
        LDR      r0,[r4,#0xc]
        LSRS     r1,r0,#16
        STRB     r1,[r5,#0x1e]
        LDR      r0,[r4,#0xc]
        LSRS     r1,r0,#24
        STRB     r1,[r5,#0x1f]
        MOV      r0,r5
        LDR      r1,[r4,#0x10]
        BL       st_clust
        BL       get_fattime
        MOV      r6,r0
        STRB     r6,[r5,#0x16]
        LSRS     r1,r6,#8
        STRB     r1,[r5,#0x17]
        LSRS     r1,r6,#16
        STRB     r1,[r5,#0x18]
        LSRS     r1,r6,#24
        STRB     r1,[r5,#0x19]
        MOVS     r0,#0
        STRB     r0,[r5,#0x12]
        MOVS     r1,#0
        STRB     r1,[r5,#0x13]
        LDRB     r0,[r4,#6]
        BIC      r0,r0,#0x20
        STRB     r0,[r4,#6]
        MOVS     r0,#1
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#4]
        LDR      r0,[r4,#0]
        BL       sync_fs
        MOV      r7,r0
|L26.172|
        MOV      r0,r7
        B        |L26.56|
        ENDP


        AREA ||i.f_truncate||, CODE, READONLY, ALIGN=1

f_truncate PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       validate
        MOV      r5,r0
        CBNZ     r5,|L27.32|
        LDRB     r0,[r4,#7]
        CBZ      r0,|L27.22|
        LDRB     r5,[r4,#7]
        B        |L27.32|
|L27.22|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#2
        CBNZ     r0,|L27.32|
        MOVS     r5,#7
|L27.32|
        CMP      r5,#0
        BNE      |L27.180|
        LDRD     r1,r0,[r4,#8]
        CMP      r0,r1
        BLS      |L27.176|
        LDR      r0,[r4,#8]
        STR      r0,[r4,#0xc]
        LDRB     r0,[r4,#6]
        ORR      r0,r0,#0x20
        STRB     r0,[r4,#6]
        LDR      r0,[r4,#8]
        CBNZ     r0,|L27.76|
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#0]
        BL       remove_chain
        MOV      r5,r0
        MOVS     r0,#0
        STR      r0,[r4,#0x10]
        B        |L27.136|
|L27.76|
        LDR      r1,[r4,#0x14]
        LDR      r0,[r4,#0]
        BL       get_fat
        MOV      r6,r0
        MOVS     r5,#0
        ADDS     r0,r6,#1
        CBNZ     r0,|L27.94|
        MOVS     r5,#1
|L27.94|
        CMP      r6,#1
        BNE      |L27.100|
        MOVS     r5,#2
|L27.100|
        CBNZ     r5,|L27.136|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        CMP      r0,r6
        BLS      |L27.136|
        MVN      r2,#0xf0000000
        LDR      r1,[r4,#0x14]
        LDR      r0,[r4,#0]
        BL       put_fat
        MOV      r5,r0
        CBNZ     r5,|L27.136|
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       remove_chain
        MOV      r5,r0
|L27.136|
        CBNZ     r5,|L27.176|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#0x40
        CBZ      r0,|L27.176|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOVS     r3,#1
        ADD      r1,r4,#0x24
        LDR      r2,[r4,#0x18]
        BL       disk_write
        CBZ      r0,|L27.168|
        MOVS     r5,#1
        B        |L27.176|
|L27.168|
        LDRB     r0,[r4,#6]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#6]
|L27.176|
        CBZ      r5,|L27.180|
        STRB     r5,[r4,#7]
|L27.180|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.f_unlink||, CODE, READONLY, ALIGN=1

f_unlink PROC
        PUSH     {r0,r4-r6,lr}
        SUB      sp,sp,#0x44
        MOVS     r6,#0
        MOVS     r2,#1
        ADD      r1,sp,#0x44
        ADD      r0,sp,#0x28
        BL       find_volume
        MOV      r4,r0
        CMP      r4,#0
        BNE      |L28.160|
        STR      sp,[sp,#0x40]
        ADD      r0,sp,#0x28
        LDR      r1,[sp,#0x44]
        BL       follow_path
        MOV      r4,r0
        NOP      
        CMP      r4,#0
        BNE      |L28.160|
        LDR      r5,[sp,#0x3c]
        CBNZ     r5,|L28.50|
        MOVS     r4,#6
        B        |L28.60|
|L28.50|
        LDRB     r0,[r5,#0xb]
        AND      r0,r0,#1
        CBZ      r0,|L28.60|
        MOVS     r4,#7
|L28.60|
        CBNZ     r4,|L28.126|
        MOV      r1,r5
        LDR      r0,[sp,#0x28]
        BL       ld_clust
        MOV      r6,r0
        CBZ      r6,|L28.126|
        LDRB     r0,[r5,#0xb]
        AND      r0,r0,#0x10
        CBZ      r0,|L28.126|
        MOVS     r2,#0x1c
        ADD      r1,sp,#0x28
        ADD      r0,sp,#0xc
        BL       mem_cpy
        STR      r6,[sp,#0x14]
        MOVS     r1,#2
        ADD      r0,sp,#0xc
        BL       dir_sdi
        MOV      r4,r0
        CBNZ     r4,|L28.126|
        MOVS     r1,#0
        ADD      r0,sp,#0xc
        BL       dir_read
        MOV      r4,r0
        CBNZ     r4,|L28.120|
        MOVS     r4,#7
|L28.120|
        CMP      r4,#4
        BNE      |L28.126|
        MOVS     r4,#0
|L28.126|
        CBNZ     r4,|L28.160|
        ADD      r0,sp,#0x28
        BL       dir_remove
        MOV      r4,r0
        CBNZ     r4,|L28.150|
        CBZ      r6,|L28.150|
        MOV      r1,r6
        LDR      r0,[sp,#0x28]
        BL       remove_chain
        MOV      r4,r0
|L28.150|
        CBNZ     r4,|L28.160|
        LDR      r0,[sp,#0x28]
        BL       sync_fs
        MOV      r4,r0
|L28.160|
        MOV      r0,r4
        ADD      sp,sp,#0x48
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.f_utime||, CODE, READONLY, ALIGN=1

f_utime PROC
        PUSH     {r0,r1,r4-r6,lr}
        SUB      sp,sp,#0x28
        MOV      r5,r1
        MOVS     r2,#1
        ADD      r1,sp,#0x28
        ADD      r0,sp,#0xc
        BL       find_volume
        MOV      r6,r0
        CBNZ     r6,|L29.80|
        STR      sp,[sp,#0x24]
        ADD      r0,sp,#0xc
        LDR      r1,[sp,#0x28]
        BL       follow_path
        MOV      r6,r0
        NOP      
        CBNZ     r6,|L29.80|
        LDR      r4,[sp,#0x20]
        CBNZ     r4,|L29.46|
        MOVS     r6,#6
        B        |L29.80|
|L29.46|
        LDRB     r0,[r5,#6]
        STRB     r0,[r4,#0x16]
        LDRH     r0,[r5,#6]
        ASRS     r1,r0,#8
        STRB     r1,[r4,#0x17]
        LDRB     r0,[r5,#4]
        STRB     r0,[r4,#0x18]
        LDRH     r0,[r5,#4]
        ASRS     r1,r0,#8
        STRB     r1,[r4,#0x19]
        MOVS     r0,#1
        LDR      r1,[sp,#0xc]
        STRB     r0,[r1,#4]
        LDR      r0,[sp,#0xc]
        BL       sync_fs
        MOV      r6,r0
|L29.80|
        MOV      r0,r6
        ADD      sp,sp,#0x30
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.f_write||, CODE, READONLY, ALIGN=1

f_write PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#0xc
        MOV      r4,r0
        MOV      r5,r2
        MOV      r11,r3
        LDR      r0,[sp,#0x10]
        STR      r0,[sp,#4]
        MOVS     r0,#0
        STR      r0,[r11,#0]
        MOV      r0,r4
        BL       validate
        STR      r0,[sp,#8]
        LDR      r0,[sp,#8]
        CBZ      r0,|L30.42|
        LDR      r0,[sp,#8]
|L30.36|
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
|L30.42|
        LDRB     r0,[r4,#7]
        CBZ      r0,|L30.50|
        LDRB     r0,[r4,#7]
        B        |L30.36|
|L30.50|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#2
        CBNZ     r0,|L30.62|
        MOVS     r0,#7
        B        |L30.36|
|L30.62|
        LDR      r0,[r4,#8]
        ADD      r0,r0,r5
        LDR      r1,[r4,#8]
        CMP      r0,r1
        BCS      |L30.74|
        MOVS     r5,#0
|L30.74|
        B        |L30.440|
|L30.76|
        LDRH     r0,[r4,#8]
        UBFX     r0,r0,#0,#9
        CMP      r0,#0
        BNE      |L30.326|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        SUBS     r0,r0,#1
        LDR      r1,[r4,#8]
        AND      r0,r0,r1,LSR #9
        AND      r10,r0,#0xff
        CMP      r10,#0
        BNE      |L30.170|
        LDR      r0,[r4,#8]
        CBNZ     r0,|L30.128|
        LDR      r7,[r4,#0x10]
        CBNZ     r7,|L30.138|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       create_chain
        MOV      r7,r0
        B        |L30.138|
|L30.128|
        LDR      r1,[r4,#0x14]
        LDR      r0,[r4,#0]
        BL       create_chain
        MOV      r7,r0
|L30.138|
        CBNZ     r7,|L30.142|
        B        |L30.446|
|L30.142|
        CMP      r7,#1
        BNE      |L30.152|
        MOVS     r0,#2
        STRB     r0,[r4,#7]
        B        |L30.36|
|L30.152|
        ADDS     r0,r7,#1
        CBNZ     r0,|L30.162|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L30.36|
|L30.162|
        STR      r7,[r4,#0x14]
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L30.170|
        STR      r7,[r4,#0x10]
|L30.170|
        LDRB     r0,[r4,#6]
        AND      r0,r0,#0x40
        CBZ      r0,|L30.210|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOVS     r3,#1
        ADD      r1,r4,#0x24
        LDR      r2,[r4,#0x18]
        BL       disk_write
        CBZ      r0,|L30.202|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L30.36|
|L30.202|
        LDRB     r0,[r4,#6]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#6]
|L30.210|
        LDR      r1,[r4,#0x14]
        LDR      r0,[r4,#0]
        BL       clust2sect
        MOV      r6,r0
        CBNZ     r6,|L30.228|
        MOVS     r0,#2
        STRB     r0,[r4,#7]
        B        |L30.36|
|L30.228|
        ADD      r6,r6,r10
        LSR      r9,r5,#9
        CMP      r9,#0
        BEQ      |L30.328|
        ADD      r0,r10,r9
        LDR      r1,[r4,#0]
        LDRB     r1,[r1,#2]
        CMP      r0,r1
        BLS      |L30.260|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        SUB      r9,r0,r10
|L30.260|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOV      r3,r9
        MOV      r2,r6
        LDR      r1,[sp,#4]
        BL       disk_write
        CBZ      r0,|L30.282|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L30.36|
|L30.282|
        LDR      r0,[r4,#0x18]
        SUBS     r0,r0,r6
        CMP      r0,r9
        BCS      |L30.320|
        LDR      r0,[r4,#0x18]
        SUBS     r0,r0,r6
        LDR      r2,[sp,#4]
        ADD      r1,r2,r0,LSL #9
        MOV      r2,#0x200
        ADD      r0,r4,#0x24
        BL       mem_cpy
        LDRB     r0,[r4,#6]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#6]
|L30.320|
        LSL      r8,r9,#9
        B        |L30.414|
|L30.326|
        B        |L30.368|
|L30.328|
        LDR      r0,[r4,#0x18]
        CMP      r0,r6
        BEQ      |L30.366|
        LDRD     r0,r1,[r4,#8]
        CMP      r0,r1
        BCS      |L30.366|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        MOVS     r3,#1
        MOV      r2,r6
        ADD      r1,r4,#0x24
        BL       disk_read
        CBZ      r0,|L30.366|
        MOVS     r0,#1
        STRB     r0,[r4,#7]
        B        |L30.36|
|L30.366|
        STR      r6,[r4,#0x18]
|L30.368|
        LDRH     r0,[r4,#8]
        UBFX     r0,r0,#0,#9
        RSB      r8,r0,#0x200
        CMP      r8,r5
        BLS      |L30.384|
        MOV      r8,r5
|L30.384|
        LDRH     r1,[r4,#8]
        UBFX     r2,r1,#0,#9
        ADD      r1,r4,#0x24
        ADDS     r0,r2,r1
        MOV      r2,r8
        LDR      r1,[sp,#4]
        BL       mem_cpy
        LDRB     r0,[r4,#6]
        ORR      r0,r0,#0x40
        STRB     r0,[r4,#6]
        NOP      
|L30.414|
        LDR      r0,[sp,#4]
        ADD      r0,r0,r8
        STR      r0,[sp,#4]
        LDR      r0,[r4,#8]
        ADD      r0,r0,r8
        STR      r0,[r4,#8]
        LDR      r0,[r11,#0]
        ADD      r0,r0,r8
        STR      r0,[r11,#0]
        SUB      r5,r5,r8
|L30.440|
        CMP      r5,#0
        BNE      |L30.76|
|L30.446|
        NOP      
        LDRD     r0,r1,[r4,#8]
        CMP      r0,r1
        BLS      |L30.460|
        LDR      r0,[r4,#8]
        STR      r0,[r4,#0xc]
|L30.460|
        LDRB     r0,[r4,#6]
        ORR      r0,r0,#0x20
        STRB     r0,[r4,#6]
        MOVS     r0,#0
        B        |L30.36|
        ENDP


        AREA ||i.find_volume||, CODE, READONLY, ALIGN=2

find_volume PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#0x28
        MOVS     r1,#0
        LDR      r0,[sp,#0x28]
        STR      r1,[r0,#0]
        LDR      r0,[sp,#0x2c]
        BL       get_ldnumber
        STR      r0,[sp,#0x24]
        LDR      r0,[sp,#0x24]
        CMP      r0,#0
        BGE      |L31.34|
        MOVS     r0,#0xb
|L31.28|
        ADD      sp,sp,#0x34
        POP      {r4-r11,pc}
|L31.34|
        LDR      r1,|L31.900|
        LDR      r0,[sp,#0x24]
        LDR      r4,[r1,r0,LSL #2]
        CBNZ     r4,|L31.48|
        MOVS     r0,#0xc
        B        |L31.28|
|L31.48|
        LDR      r0,[sp,#0x28]
        STR      r4,[r0,#0]
        LDRB     r0,[r4,#0]
        CBZ      r0,|L31.88|
        LDRB     r0,[r4,#1]
        BL       disk_status
        MOV      r9,r0
        AND      r0,r9,#1
        CBNZ     r0,|L31.88|
        LDR      r0,[sp,#0x30]
        CBZ      r0,|L31.84|
        AND      r0,r9,#4
        CBZ      r0,|L31.84|
        MOVS     r0,#0xa
        B        |L31.28|
|L31.84|
        MOVS     r0,#0
        B        |L31.28|
|L31.88|
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        LDR      r0,[sp,#0x24]
        STRB     r0,[r4,#1]
        LDRB     r0,[r4,#1]
        BL       disk_initialize
        MOV      r9,r0
        AND      r0,r9,#1
        CBZ      r0,|L31.114|
        MOVS     r0,#3
        B        |L31.28|
|L31.114|
        LDR      r0,[sp,#0x30]
        CBZ      r0,|L31.128|
        AND      r0,r9,#4
        CBZ      r0,|L31.128|
        MOVS     r0,#0xa
        B        |L31.28|
|L31.128|
        MOVS     r7,#0
        MOV      r1,r7
        MOV      r0,r4
        BL       check_fs
        MOV      r5,r0
        CMP      r5,#1
        BEQ      |L31.148|
        CBNZ     r5,|L31.250|
        B        |L31.250|
|L31.148|
        MOVS     r6,#0
        B        |L31.206|
|L31.152|
        ADD      r0,r4,#0x1ee
        ADD      r8,r0,r6,LSL #4
        LDRB     r0,[r8,#4]
        CBZ      r0,|L31.196|
        LDRB     r0,[r8,#0xb]
        LSLS     r1,r0,#24
        LDRB     r0,[r8,#0xa]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r8,#9]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r8,#8]
        ORRS     r0,r0,r1
        B        |L31.198|
|L31.196|
        MOVS     r0,#0
|L31.198|
        ADD      r1,sp,#8
        STR      r0,[r1,r6,LSL #2]
        ADDS     r6,r6,#1
|L31.206|
        CMP      r6,#4
        BCC      |L31.152|
        MOVS     r6,#0
        CBZ      r6,|L31.216|
        SUBS     r6,r6,#1
|L31.216|
        NOP      
|L31.218|
        ADD      r0,sp,#8
        LDR      r7,[r0,r6,LSL #2]
        CBZ      r7,|L31.236|
        MOV      r1,r7
        MOV      r0,r4
        BL       check_fs
        B        |L31.238|
|L31.236|
        MOVS     r0,#2
|L31.238|
        MOV      r5,r0
        CBZ      r5,|L31.250|
        ADDS     r0,r6,#1
        MOV      r6,r0
        CMP      r0,#4
        BCC      |L31.218|
|L31.250|
        CMP      r5,#3
        BNE      |L31.258|
        MOVS     r0,#1
        B        |L31.28|
|L31.258|
        CBZ      r5,|L31.264|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.264|
        MOVS     r0,#0x3b
        LDRB     r1,[r0,r4]
        LDRB     r0,[r4,#0x3c]
        ORR      r0,r1,r0,LSL #8
        CMP      r0,#0x200
        BEQ      |L31.286|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.286|
        MOVS     r0,#0x46
        LDRB     r1,[r0,r4]
        LDRB     r0,[r4,#0x47]
        ORR      r10,r1,r0,LSL #8
        CMP      r10,#0
        BNE      |L31.334|
        LDRB     r0,[r4,#0x57]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x56]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x55]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x54]
        ORR      r10,r0,r1
|L31.334|
        STR      r10,[r4,#0x18]
        MOVS     r0,#0x40
        LDRB     r0,[r0,r4]
        STRB     r0,[r4,#3]
        LDRB     r0,[r4,#3]
        CMP      r0,#1
        BEQ      |L31.360|
        LDRB     r0,[r4,#3]
        CMP      r0,#2
        BEQ      |L31.360|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.360|
        LDRB     r0,[r4,#3]
        MUL      r10,r10,r0
        MOVS     r0,#0x3d
        LDRB     r0,[r0,r4]
        STRB     r0,[r4,#2]
        LDRB     r0,[r4,#2]
        CBZ      r0,|L31.384|
        LDRB     r0,[r4,#2]
        SUBS     r1,r0,#1
        ANDS     r0,r0,r1
        CBZ      r0,|L31.388|
|L31.384|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.388|
        MOVS     r0,#0x41
        LDRB     r1,[r0,r4]
        LDRB     r0,[r4,#0x42]
        ORR      r0,r1,r0,LSL #8
        STRH     r0,[r4,#8]
        LDRB     r0,[r4,#8]
        AND      r0,r0,#0xf
        CBZ      r0,|L31.414|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.414|
        MOVS     r0,#0x43
        LDRB     r1,[r0,r4]
        LDRB     r0,[r4,#0x44]
        ORR      r0,r1,r0,LSL #8
        STR      r0,[sp,#0x20]
        LDR      r0,[sp,#0x20]
        CBNZ     r0,|L31.462|
        LDRB     r0,[r4,#0x53]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x52]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x51]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x50]
        ORRS     r0,r0,r1
        STR      r0,[sp,#0x20]
|L31.462|
        MOVS     r0,#0x3e
        LDRB     r1,[r0,r4]
        LDRB     r0,[r4,#0x3f]
        ORR      r0,r1,r0,LSL #8
        STR      r0,[sp,#4]
        LDR      r0,[sp,#4]
        CBNZ     r0,|L31.484|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.484|
        LDR      r0,[sp,#4]
        ADD      r0,r0,r10
        LDRH     r1,[r4,#8]
        ADD      r0,r0,r1,LSR #4
        STR      r0,[sp,#0x1c]
        LDRD     r0,r1,[sp,#0x1c]
        CMP      r1,r0
        BCS      |L31.508|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.508|
        LDRD     r1,r0,[sp,#0x1c]
        SUBS     r0,r0,r1
        LDRB     r1,[r4,#2]
        UDIV     r11,r0,r1
        CMP      r11,#0
        BNE      |L31.530|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.530|
        MOVS     r5,#1
        MOV      r0,#0xff6
        CMP      r11,r0
        BCC      |L31.542|
        MOVS     r5,#2
|L31.542|
        MOV      r0,#0xfff6
        CMP      r11,r0
        BCC      |L31.552|
        MOVS     r5,#3
|L31.552|
        ADD      r0,r11,#2
        STR      r0,[r4,#0x14]
        STR      r7,[r4,#0x1c]
        LDR      r0,[sp,#4]
        ADD      r0,r0,r7
        STR      r0,[r4,#0x20]
        LDR      r0,[sp,#0x1c]
        ADD      r0,r0,r7
        STR      r0,[r4,#0x28]
        CMP      r5,#3
        BNE      |L31.622|
        LDRH     r0,[r4,#8]
        CBZ      r0,|L31.584|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.584|
        LDRB     r0,[r4,#0x5f]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x5e]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x5d]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x5c]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x24]
        LDR      r0,[r4,#0x14]
        LSLS     r0,r0,#2
        STR      r0,[sp,#0x18]
        B        |L31.664|
|L31.622|
        LDRH     r0,[r4,#8]
        CBNZ     r0,|L31.630|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.630|
        LDR      r0,[r4,#0x20]
        ADD      r0,r0,r10
        STR      r0,[r4,#0x24]
        CMP      r5,#2
        BNE      |L31.646|
        LDR      r0,[r4,#0x14]
        LSLS     r0,r0,#1
        B        |L31.662|
|L31.646|
        LDRB     r0,[r4,#0x14]
        AND      r0,r0,#1
        LDR      r1,[r4,#0x14]
        ADD      r1,r1,r1,LSL #1
        ADD      r0,r0,r1,LSR #1
|L31.662|
        STR      r0,[sp,#0x18]
|L31.664|
        LDR      r1,[r4,#0x18]
        LDR      r0,[sp,#0x18]
        ADD      r0,r0,#0x1ff
        CMP      r1,r0,LSR #9
        BCS      |L31.682|
        MOVS     r0,#0xd
        B        |L31.28|
|L31.682|
        MOV      r0,#0xffffffff
        STR      r0,[r4,#0x10]
        STR      r0,[r4,#0xc]
        MOVS     r0,#0x80
        STRB     r0,[r4,#5]
        CMP      r5,#3
        BNE      |L31.880|
        LDRB     r1,[r4,#0x60]
        LDRB     r0,[r4,#0x61]
        ORR      r0,r1,r0,LSL #8
        CMP      r0,#1
        BNE      |L31.880|
        ADDS     r1,r7,#1
        MOV      r0,r4
        BL       move_window
        CBNZ     r0,|L31.848|
        MOVS     r0,#0
        STRB     r0,[r4,#5]
        LDRB     r1,[r4,#0x22e]
        LDRB     r0,[r4,#0x22f]
        ORR      r0,r1,r0,LSL #8
        MOV      r1,#0xaa55
        CMP      r0,r1
        BNE      |L31.880|
        MOVS     r0,#0x33
        LDRB     r0,[r0,r4]
        LSLS     r1,r0,#24
        MOVS     r0,#0x32
        LDRB     r0,[r0,r4]
        ORR      r1,r1,r0,LSL #16
        MOVS     r0,#0x31
        LDRB     r0,[r0,r4]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x30]
        ORRS     r0,r0,r1
        LDR      r1,|L31.904|
        CMP      r0,r1
        BNE      |L31.880|
        LDRB     r0,[r4,#0x217]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x216]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x215]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x214]
        ORRS     r0,r0,r1
        LDR      r1,|L31.908|
        CMP      r0,r1
        BNE      |L31.880|
        LDRB     r0,[r4,#0x21b]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x21a]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x219]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x218]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x10]
        B        |L31.850|
|L31.848|
        B        |L31.880|
|L31.850|
        LDRB     r0,[r4,#0x21f]
        LSLS     r1,r0,#24
        LDRB     r0,[r4,#0x21e]
        ORR      r1,r1,r0,LSL #16
        LDRB     r0,[r4,#0x21d]
        ORR      r0,r1,r0,LSL #8
        LDRB     r1,[r4,#0x21c]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0xc]
|L31.880|
        STRB     r5,[r4,#0]
        LDR      r0,|L31.912|
        LDRH     r0,[r0,#0]  ; Fsid
        ADDS     r0,r0,#1
        UXTH     r0,r0
        LDR      r1,|L31.912|
        STRH     r0,[r1,#0]
        STRH     r0,[r4,#6]
        MOVS     r0,#0
        B        |L31.28|
        ENDP

|L31.900|
        DCD      FatFs
|L31.904|
        DCD      0x41615252
|L31.908|
        DCD      0x61417272
|L31.912|
        DCD      Fsid

        AREA ||i.follow_path||, CODE, READONLY, ALIGN=1

follow_path PROC
        PUSH     {r0,r1,r4-r8,lr}
        MOV      r4,r0
        LDR      r0,[sp,#4]
        LDRB     r0,[r0,#0]
        CMP      r0,#0x2f
        BEQ      |L32.22|
        LDR      r0,[sp,#4]
        LDRB     r0,[r0,#0]
        CMP      r0,#0x5c
        BNE      |L32.28|
|L32.22|
        LDR      r0,[sp,#4]
        ADDS     r0,r0,#1
        STR      r0,[sp,#4]
|L32.28|
        MOVS     r0,#0
        STR      r0,[r4,#8]
        LDR      r0,[sp,#4]
        LDRSB    r0,[r0,#0]
        CMP      r0,#0x20
        BCS      |L32.58|
        MOVS     r1,#0
        MOV      r0,r4
        BL       dir_sdi
        MOV      r5,r0
        MOVS     r0,#0
        STR      r0,[r4,#0x14]
        B        |L32.140|
|L32.58|
        NOP      
|L32.60|
        ADD      r1,sp,#4
        MOV      r0,r4
        BL       create_name
        MOV      r5,r0
        CBZ      r5,|L32.74|
        B        |L32.138|
|L32.74|
        MOV      r0,r4
        BL       dir_find
        MOV      r5,r0
        LDR      r0,[r4,#0x18]
        LDRB     r6,[r0,#0xb]
        CBZ      r5,|L32.104|
        CMP      r5,#4
        BNE      |L32.102|
        NOP      
        AND      r0,r6,#4
        CBNZ     r0,|L32.102|
        MOVS     r5,#5
|L32.102|
        B        |L32.138|
|L32.104|
        AND      r0,r6,#4
        CBZ      r0,|L32.112|
        B        |L32.138|
|L32.112|
        LDR      r7,[r4,#0x14]
        LDRB     r0,[r7,#0xb]
        AND      r0,r0,#0x10
        CBNZ     r0,|L32.126|
        MOVS     r5,#5
        B        |L32.138|
|L32.126|
        MOV      r1,r7
        LDR      r0,[r4,#0]
        BL       ld_clust
        STR      r0,[r4,#8]
        B        |L32.60|
|L32.138|
        NOP      
|L32.140|
        MOV      r0,r5
        POP      {r2-r8,pc}
        ENDP


        AREA ||i.get_fat||, CODE, READONLY, ALIGN=1

get_fat PROC
        PUSH     {r4-r10,lr}
        MOV      r5,r0
        MOV      r4,r1
        CMP      r4,#2
        BCC      |L33.18|
        LDR      r0,[r5,#0x14]
        CMP      r0,r4
        BHI      |L33.24|
|L33.18|
        MOV      r9,#1
        B        |L33.236|
|L33.24|
        MOV      r9,#0xffffffff
        LDRB     r0,[r5,#0]
        CMP      r0,#1
        BEQ      |L33.44|
        CMP      r0,#2
        BEQ      |L33.132|
        CMP      r0,#3
        BNE      |L33.228|
        B        |L33.172|
|L33.44|
        MOV      r7,r4
        ADD      r7,r7,r7,LSR #1
        LDR      r0,[r5,#0x20]
        ADD      r1,r0,r7,LSR #9
        MOV      r0,r5
        BL       move_window
        CBZ      r0,|L33.66|
        B        |L33.234|
|L33.66|
        MOV      r0,r7
        ADDS     r7,r7,#1
        UBFX     r1,r0,#0,#9
        ADD      r0,r5,#0x30
        LDRB     r8,[r0,r1]
        LDR      r0,[r5,#0x20]
        ADD      r1,r0,r7,LSR #9
        MOV      r0,r5
        BL       move_window
        CBZ      r0,|L33.98|
        B        |L33.234|
|L33.98|
        UBFX     r1,r7,#0,#9
        ADD      r0,r5,#0x30
        LDRB     r0,[r0,r1]
        ORR      r8,r8,r0,LSL #8
        AND      r0,r4,#1
        CBZ      r0,|L33.124|
        LSR      r0,r8,#4
        B        |L33.128|
|L33.124|
        UBFX     r0,r8,#0,#12
|L33.128|
        MOV      r9,r0
        B        |L33.234|
|L33.132|
        LDR      r0,[r5,#0x20]
        ADD      r1,r0,r4,LSR #8
        MOV      r0,r5
        BL       move_window
        CBZ      r0,|L33.148|
        B        |L33.234|
|L33.148|
        MOV      r0,#0x1ff
        AND      r1,r0,r4,LSL #1
        ADD      r0,r5,#0x30
        ADDS     r6,r1,r0
        LDRB     r0,[r6,#0]
        LDRB     r1,[r6,#1]
        ORR      r9,r0,r1,LSL #8
        B        |L33.234|
|L33.172|
        LDR      r0,[r5,#0x20]
        ADD      r1,r0,r4,LSR #7
        MOV      r0,r5
        BL       move_window
        CBZ      r0,|L33.188|
        B        |L33.234|
|L33.188|
        MOV      r0,#0x1ff
        AND      r1,r0,r4,LSL #2
        ADD      r0,r5,#0x30
        ADDS     r6,r1,r0
        LDRB     r0,[r6,#3]
        LSLS     r0,r0,#24
        LDRB     r1,[r6,#2]
        ORR      r0,r0,r1,LSL #16
        LDRB     r1,[r6,#1]
        ORR      r0,r0,r1,LSL #8
        LDRB     r1,[r6,#0]
        ORRS     r0,r0,r1
        BIC      r9,r0,#0xf0000000
        B        |L33.234|
|L33.228|
        MOV      r9,#1
        NOP      
|L33.234|
        NOP      
|L33.236|
        MOV      r0,r9
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.get_fileinfo||, CODE, READONLY, ALIGN=1

get_fileinfo PROC
        PUSH     {r4-r7,lr}
        MOV      r4,r0
        ADD      r2,r1,#9
        LDR      r6,[r4,#0x10]
        CMP      r6,#0
        BEQ      |L34.108|
        LDR      r0,[r4,#0x14]
        MOVS     r3,#0
        B        |L34.58|
|L34.20|
        MOV      r6,r3
        ADDS     r3,r3,#1
        LDRB     r6,[r0,r6]
        SXTB     r5,r6
        CMP      r5,#0x20
        BNE      |L34.34|
        B        |L34.58|
|L34.34|
        CMP      r5,#5
        BNE      |L34.42|
        MVN      r5,#0x1a
|L34.42|
        CMP      r3,#9
        BNE      |L34.52|
        MOVS     r6,#0x2e
        STRB     r6,[r2],#1
|L34.52|
        STRB     r5,[r2],#1
        NOP      
|L34.58|
        CMP      r3,#0xb
        BCC      |L34.20|
        LDRB     r6,[r0,#0xb]
        STRB     r6,[r1,#8]
        LDRB     r6,[r0,#0x1f]
        LSLS     r7,r6,#24
        LDRB     r6,[r0,#0x1e]
        ORR      r7,r7,r6,LSL #16
        LDRB     r6,[r0,#0x1d]
        ORR      r6,r7,r6,LSL #8
        LDRB     r7,[r0,#0x1c]
        ORRS     r6,r6,r7
        STR      r6,[r1,#0]
        LDRB     r7,[r0,#0x18]
        LDRB     r6,[r0,#0x19]
        ORR      r6,r7,r6,LSL #8
        STRH     r6,[r1,#4]
        LDRB     r7,[r0,#0x16]
        LDRB     r6,[r0,#0x17]
        ORR      r6,r7,r6,LSL #8
        STRH     r6,[r1,#6]
|L34.108|
        MOVS     r6,#0
        STRB     r6,[r2,#0]
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.get_ldnumber||, CODE, READONLY, ALIGN=1

get_ldnumber PROC
        PUSH     {r4-r6,lr}
        MOV      r2,r0
        MOV      r0,#0xffffffff
        LDR      r5,[r2,#0]
        CBZ      r5,|L35.72|
        LDR      r1,[r2,#0]
        B        |L35.18|
|L35.16|
        ADDS     r1,r1,#1
|L35.18|
        LDRSB    r5,[r1,#0]
        CMP      r5,#0x21
        BCC      |L35.32|
        LDRB     r5,[r1,#0]
        CMP      r5,#0x3a
        BNE      |L35.16|
|L35.32|
        LDRB     r5,[r1,#0]
        CMP      r5,#0x3a
        BNE      |L35.70|
        LDR      r4,[r2,#0]
        LDRSB    r5,[r4],#1
        SUB      r3,r5,#0x30
        CMP      r3,#0xa
        BCS      |L35.68|
        CMP      r4,r1
        BNE      |L35.68|
        CMP      r3,#3
        BCS      |L35.68|
        MOV      r0,r3
        ADDS     r5,r1,#1
        MOV      r1,r5
        STR      r5,[r2,#0]
|L35.68|
        POP      {r4-r6,pc}
|L35.70|
        MOVS     r0,#0
|L35.72|
        NOP      
        B        |L35.68|
        ENDP


        AREA ||i.ld_clust||, CODE, READONLY, ALIGN=1

ld_clust PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        LDRB     r4,[r1,#0x1a]
        LDRB     r3,[r1,#0x1b]
        ORR      r0,r4,r3,LSL #8
        LDRB     r3,[r2,#0]
        CMP      r3,#3
        BNE      |L36.30|
        LDRB     r4,[r1,#0x14]
        LDRB     r3,[r1,#0x15]
        ORR      r3,r4,r3,LSL #8
        ORR      r0,r0,r3,LSL #16
|L36.30|
        POP      {r4,pc}
        ENDP


        AREA ||i.mem_cmp||, CODE, READONLY, ALIGN=1

mem_cmp PROC
        PUSH     {r4-r7,lr}
        MOV      r3,r0
        MOV      r4,r3
        MOV      r5,r1
        MOVS     r0,#0
        NOP      
|L37.12|
        SUBS     r6,r2,#0
        SUB      r2,r2,#1
        BEQ      |L37.36|
        LDRB     r7,[r4],#1
        LDRB     r12,[r5],#1
        SUB      r6,r7,r12
        SUBS     r0,r6,#0
        BEQ      |L37.12|
|L37.36|
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.mem_cpy||, CODE, READONLY, ALIGN=1

mem_cpy PROC
        PUSH     {r4-r6,lr}
        MOV      r3,r0
        MOV      r4,r1
        B        |L38.16|
|L38.8|
        LDRB     r5,[r4],#1
        STRB     r5,[r3],#1
|L38.16|
        SUBS     r5,r2,#0
        SUB      r2,r2,#1
        BNE      |L38.8|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.mem_set||, CODE, READONLY, ALIGN=1

mem_set PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r0
        B        |L39.10|
|L39.6|
        STRB     r1,[r3],#1
|L39.10|
        SUBS     r4,r2,#0
        SUB      r2,r2,#1
        BNE      |L39.6|
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.move_window||, CODE, READONLY, ALIGN=1

move_window PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r6,#0
        LDR      r0,[r4,#0x2c]
        CMP      r0,r5
        BEQ      |L40.48|
        MOV      r0,r4
        BL       sync_window
        MOV      r6,r0
        CBNZ     r6,|L40.48|
        LDRB     r0,[r4,#1]
        MOVS     r3,#1
        MOV      r2,r5
        ADD      r1,r4,#0x30
        BL       disk_read
        CBZ      r0,|L40.46|
        MOV      r5,#0xffffffff
        MOVS     r6,#1
|L40.46|
        STR      r5,[r4,#0x2c]
|L40.48|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.put_fat||, CODE, READONLY, ALIGN=1

put_fat PROC
        PUSH     {r4-r10,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r7,r2
        CMP      r6,#2
        BCC      |L41.20|
        LDR      r0,[r5,#0x14]
        CMP      r0,r6
        BHI      |L41.26|
|L41.20|
        MOV      r8,#2
        B        |L41.316|
|L41.26|
        LDRB     r0,[r5,#0]
        CMP      r0,#1
        BEQ      |L41.42|
        CMP      r0,#2
        BEQ      |L41.174|
        CMP      r0,#3
        BNE      |L41.292|
        B        |L41.222|
|L41.42|
        MOV      r9,r6
        ADD      r9,r9,r9,LSR #1
        LDR      r0,[r5,#0x20]
        ADD      r1,r0,r9,LSR #9
        MOV      r0,r5
        BL       move_window
        MOV      r8,r0
        CMP      r8,#0
        BEQ      |L41.70|
        B        |L41.314|
|L41.70|
        MOV      r0,r9
        ADD      r9,r9,#1
        UBFX     r1,r0,#0,#9
        ADD      r0,r5,#0x30
        ADDS     r4,r1,r0
        AND      r0,r6,#1
        CBZ      r0,|L41.102|
        UXTB     r1,r7
        LDRB     r0,[r4,#0]
        BFI      r0,r1,#4,#28
        B        |L41.104|
|L41.102|
        MOV      r0,r7
|L41.104|
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        STRB     r0,[r5,#4]
        LDR      r0,[r5,#0x20]
        ADD      r1,r0,r9,LSR #9
        MOV      r0,r5
        BL       move_window
        MOV      r8,r0
        CMP      r8,#0
        BEQ      |L41.132|
        B        |L41.314|
|L41.132|
        UBFX     r1,r9,#0,#9
        ADD      r0,r5,#0x30
        ADDS     r4,r1,r0
        AND      r0,r6,#1
        CBZ      r0,|L41.154|
        UBFX     r0,r7,#4,#8
        B        |L41.166|
|L41.154|
        LDRB     r0,[r4,#0]
        AND      r0,r0,#0xf0
        UBFX     r1,r7,#8,#4
        ORRS     r0,r0,r1
|L41.166|
        STRB     r0,[r4,#0]
        MOVS     r0,#1
        STRB     r0,[r5,#4]
        B        |L41.314|
|L41.174|
        LDR      r0,[r5,#0x20]
        ADD      r1,r0,r6,LSR #8
        MOV      r0,r5
        BL       move_window
        MOV      r8,r0
        CMP      r8,#0
        BEQ      |L41.196|
        B        |L41.314|
|L41.196|
        MOV      r0,#0x1ff
        AND      r1,r0,r6,LSL #1
        ADD      r0,r5,#0x30
        ADDS     r4,r1,r0
        STRB     r7,[r4,#0]
        LSRS     r0,r7,#8
        STRB     r0,[r4,#1]
        MOVS     r0,#1
        STRB     r0,[r5,#4]
        B        |L41.314|
|L41.222|
        LDR      r0,[r5,#0x20]
        ADD      r1,r0,r6,LSR #7
        MOV      r0,r5
        BL       move_window
        MOV      r8,r0
        CMP      r8,#0
        BEQ      |L41.244|
        B        |L41.314|
|L41.244|
        MOV      r0,#0x1ff
        AND      r1,r0,r6,LSL #2
        ADD      r0,r5,#0x30
        ADDS     r4,r1,r0
        LDRB     r0,[r4,#3]
        LSLS     r0,r0,#24
        LDRB     r1,[r4,#2]
        ORR      r0,r0,r1,LSL #16
        LDRB     r1,[r4,#1]
        ORR      r0,r0,r1,LSL #8
        LDRB     r1,[r4,#0]
        ORRS     r0,r0,r1
        AND      r0,r0,#0xf0000000
        ORRS     r7,r7,r0
        STRB     r7,[r4,#0]
        LSRS     r0,r7,#8
        STRB     r0,[r4,#1]
        B        |L41.294|
|L41.292|
        B        |L41.308|
|L41.294|
        LSRS     r0,r7,#16
        STRB     r0,[r4,#2]
        LSRS     r0,r7,#24
        STRB     r0,[r4,#3]
        MOVS     r0,#1
        STRB     r0,[r5,#4]
        B        |L41.314|
|L41.308|
        MOV      r8,#2
        NOP      
|L41.314|
        NOP      
|L41.316|
        MOV      r0,r8
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.remove_chain||, CODE, READONLY, ALIGN=1

remove_chain PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        CMP      r6,#2
        BCC      |L42.18|
        LDR      r0,[r4,#0x14]
        CMP      r0,r6
        BHI      |L42.22|
|L42.18|
        MOVS     r7,#2
        B        |L42.102|
|L42.22|
        MOVS     r7,#0
        B        |L42.94|
|L42.26|
        MOV      r1,r6
        MOV      r0,r4
        BL       get_fat
        MOV      r5,r0
        CBNZ     r5,|L42.40|
        B        |L42.100|
|L42.40|
        CMP      r5,#1
        BNE      |L42.48|
        MOVS     r7,#2
        B        |L42.100|
|L42.48|
        ADDS     r0,r5,#1
        CBNZ     r0,|L42.56|
        MOVS     r7,#1
        B        |L42.100|
|L42.56|
        MOVS     r2,#0
        MOV      r1,r6
        MOV      r0,r4
        BL       put_fat
        MOV      r7,r0
        CBZ      r7,|L42.72|
        B        |L42.100|
|L42.72|
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        CBZ      r0,|L42.92|
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        LDRB     r0,[r4,#5]
        ORR      r0,r0,#1
        STRB     r0,[r4,#5]
|L42.92|
        MOV      r6,r5
|L42.94|
        LDR      r0,[r4,#0x14]
        CMP      r0,r6
        BHI      |L42.26|
|L42.100|
        NOP      
|L42.102|
        MOV      r0,r7
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.st_clust||, CODE, READONLY, ALIGN=1

st_clust PROC
        STRB     r1,[r0,#0x1a]
        LSRS     r3,r1,#8
        STRB     r3,[r0,#0x1b]
        LSRS     r2,r1,#16
        STRB     r2,[r0,#0x14]
        LSRS     r3,r1,#24
        STRB     r3,[r0,#0x15]
        BX       lr
        ENDP


        AREA ||i.sync_fs||, CODE, READONLY, ALIGN=1

sync_fs PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       sync_window
        MOV      r5,r0
        CMP      r5,#0
        BNE      |L44.196|
        LDRB     r0,[r4,#0]
        CMP      r0,#3
        BNE      |L44.182|
        LDRB     r0,[r4,#5]
        CMP      r0,#1
        BNE      |L44.182|
        LSLS     r2,r0,#9
        MOVS     r1,#0
        ADD      r0,r4,#0x30
        BL       mem_set
        MOVS     r1,#0x55
        STRB     r1,[r4,#0x22e]
        MOVS     r1,#0xaa
        STRB     r1,[r4,#0x22f]
        MOVS     r0,#0x52
        STRB     r0,[r4,#0x30]
        MOVS     r1,#0x52
        MOVS     r0,#0x31
        STRB     r1,[r0,r4]
        MOVS     r1,#0x61
        MOVS     r0,#0x32
        STRB     r1,[r0,r4]
        MOVS     r1,#0x41
        MOVS     r0,#0x33
        STRB     r1,[r0,r4]
        MOVS     r1,#0x72
        STRB     r1,[r4,#0x214]
        STRB     r1,[r4,#0x215]
        MOVS     r1,#0x41
        STRB     r1,[r4,#0x216]
        MOVS     r1,#0x61
        STRB     r1,[r4,#0x217]
        LDRB     r1,[r4,#0x10]
        STRB     r1,[r4,#0x218]
        LDRH     r0,[r4,#0x10]
        LSRS     r1,r0,#8
        STRB     r1,[r4,#0x219]
        LDR      r0,[r4,#0x10]
        LSRS     r1,r0,#16
        STRB     r1,[r4,#0x21a]
        LDR      r0,[r4,#0x10]
        LSRS     r1,r0,#24
        STRB     r1,[r4,#0x21b]
        LDRB     r1,[r4,#0xc]
        STRB     r1,[r4,#0x21c]
        LDRH     r0,[r4,#0xc]
        LSRS     r1,r0,#8
        STRB     r1,[r4,#0x21d]
        LDR      r0,[r4,#0xc]
        LSRS     r1,r0,#16
        STRB     r1,[r4,#0x21e]
        LDR      r0,[r4,#0xc]
        LSRS     r1,r0,#24
        STRB     r1,[r4,#0x21f]
        LDR      r0,[r4,#0x1c]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x2c]
        LDRB     r0,[r4,#1]
        MOVS     r3,#1
        ADD      r1,r4,#0x30
        LDR      r2,[r4,#0x2c]
        BL       disk_write
        MOVS     r0,#0
        STRB     r0,[r4,#5]
|L44.182|
        LDRB     r0,[r4,#1]
        MOVS     r2,#0
        MOV      r1,r2
        BL       disk_ioctl
        CBZ      r0,|L44.196|
        MOVS     r5,#1
|L44.196|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.sync_window||, CODE, READONLY, ALIGN=1

sync_window PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOVS     r7,#0
        LDRB     r0,[r4,#4]
        CBZ      r0,|L45.76|
        LDR      r5,[r4,#0x2c]
        LDRB     r0,[r4,#1]
        MOVS     r3,#1
        MOV      r2,r5
        ADD      r1,r4,#0x30
        BL       disk_write
        CBZ      r0,|L45.34|
        MOVS     r7,#1
        B        |L45.76|
|L45.34|
        MOVS     r0,#0
        STRB     r0,[r4,#4]
        LDR      r0,[r4,#0x20]
        SUBS     r0,r5,r0
        LDR      r1,[r4,#0x18]
        CMP      r0,r1
        BCS      |L45.76|
        LDRB     r6,[r4,#3]
        B        |L45.72|
|L45.52|
        LDR      r0,[r4,#0x18]
        ADD      r5,r5,r0
        LDRB     r0,[r4,#1]
        MOVS     r3,#1
        MOV      r2,r5
        ADD      r1,r4,#0x30
        BL       disk_write
        SUBS     r6,r6,#1
|L45.72|
        CMP      r6,#2
        BCS      |L45.52|
|L45.76|
        MOV      r0,r7
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.validate||, CODE, READONLY, ALIGN=1

validate PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r5
        CBZ      r4,|L46.28|
        LDR      r0,[r4,#0]
        CBZ      r0,|L46.28|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#0]
        CBZ      r0,|L46.28|
        LDR      r0,[r4,#0]
        LDRH     r0,[r0,#6]
        LDRH     r1,[r4,#4]
        CMP      r0,r1
        BEQ      |L46.32|
|L46.28|
        MOVS     r0,#9
|L46.30|
        POP      {r4-r6,pc}
|L46.32|
        LDR      r1,[r4,#0]
        LDRB     r0,[r1,#1]
        BL       disk_status
        AND      r0,r0,#1
        CBZ      r0,|L46.50|
        MOVS     r0,#3
        B        |L46.30|
|L46.50|
        MOVS     r0,#0
        B        |L46.30|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

FatFs
        %        12

        AREA ||.constdata||, DATA, READONLY, ALIGN=1

vst
        DCW      0x0400,0x0200
        DCW      0x0100,0x0080
        DCW      0x0040,0x0020
        DCW      0x0010,0x0008
        DCW      0x0004,0x0002
        DCW      0x0000
||cst||
        DCW      0x8000
        DCW      0x4000,0x2000
        DCW      0x1000,0x0800
        DCW      0x4000,0x2000
        DCW      0x1000,0x0800
        DCW      0x0400,0x0200

        AREA ||.data||, DATA, ALIGN=1

Fsid
        DCB      0x00,0x00

        EXPORT clust2sect [CODE]
        EXPORT f_chmod [CODE]
        EXPORT f_close [CODE]
        EXPORT f_closedir [CODE]
        EXPORT f_getfree [CODE]
        EXPORT f_lseek [CODE]
        EXPORT f_mkdir [CODE]
        EXPORT f_mkfs [CODE]
        EXPORT f_mount [CODE]
        EXPORT f_open [CODE]
        EXPORT f_opendir [CODE]
        EXPORT f_read [CODE]
        EXPORT f_readdir [CODE]
        EXPORT f_rename [CODE]
        EXPORT f_stat [CODE]
        EXPORT f_sync [CODE]
        EXPORT f_truncate [CODE]
        EXPORT f_unlink [CODE]
        EXPORT f_utime [CODE]
        EXPORT f_write [CODE]
        EXPORT get_fat [CODE]
        EXPORT put_fat [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT disk_write [CODE]
        IMPORT disk_read [CODE]
        IMPORT disk_ioctl [CODE]
        IMPORT disk_status [CODE]
        IMPORT disk_initialize [CODE]
        IMPORT get_fattime [CODE]

        KEEP check_fs
        KEEP chk_chr
        KEEP create_chain
        KEEP create_name
        KEEP dir_alloc
        KEEP dir_find
        KEEP dir_next
        KEEP dir_read
        KEEP dir_register
        KEEP dir_remove
        KEEP dir_sdi
        KEEP find_volume
        KEEP follow_path
        KEEP get_fileinfo
        KEEP get_ldnumber
        KEEP ld_clust
        KEEP mem_cmp
        KEEP mem_cpy
        KEEP mem_set
        KEEP move_window
        KEEP remove_chain
        KEEP st_clust
        KEEP sync_fs
        KEEP sync_window
        KEEP validate
        KEEP FatFs
        KEEP vst
        KEEP ||cst||
        KEEP Fsid

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
